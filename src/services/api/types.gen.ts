// This file is auto-generated by @hey-api/openapi-ts

export type AccessToken = {
    accessToken: string;
    expireTime: number;
};

export type Address = {
    id: string;
    name: string;
    mobile: string;
    country: number;
    province: Area;
    city: Area;
    region: Area;
    address: string;
    isDefault: boolean;
    user: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AddressCreateSessionDto = {
    name: string;
    mobile: string;
    country: number;
    province: number;
    city: number;
    region: number;
    address: string;
    isDefault: boolean;
};

export type AddressGetAllSessionResponse = {
    code: number;
    data: Array<Address>;
};

export type AddressGetResponse = {
    code: number;
    data: Address;
};

export type AddressUpdateSessionDto = {
    name: string;
    mobile: string;
    country: number;
    province: number;
    city: number;
    region: number;
    address: string;
    isDefault: boolean;
};

export type AiAliyunAccount = {
    id: string;
    /**
     * Access Key
     */
    accessKey: string;
    /**
     * 名称
     */
    name: string;
    /**
     * Secret Key
     */
    secretKey: string;
    /**
     * Dashscope Api Key
     */
    dashscopeApiKey: string;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunAccountGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiAliyunAccount>;
};

export type AiAliyunAccountGetHistoryResponse = {
    code: number;
    message: string;
    data: Array<AiAliyunMessage>;
};

export type AiAliyunAccountGetResponse = {
    code: number;
    message: string;
    data: AiAliyunAccount;
};

export type AiAliyunAccountPaginatePage = {
    count: number;
    list: Array<AiAliyunAccount>;
};

export type AiAliyunAccountPaginateResponse = {
    code: number;
    message: string;
    data: AiAliyunAccountPaginatePage;
};

export type AiAliyunMessage = {
    id: string;
    /**
     * role
     */
    role: string;
    /**
     * content
     */
    content: string;
    /**
     * queueId
     */
    qid: string;
    /**
     * 状态
     */
    status: string;
    session: AiAliyunSession;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunOcr = {
    id: string;
    /**
     * ocr任务名称
     */
    name: string;
    account: AiAliyunAccount;
    /**
     * 操作类型
     */
    type: string;
    recognizeAllText: AiAliyunOcrRecognizeAllText;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunOcrGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiAliyunOcr>;
};

export type AiAliyunOcrGetResponse = {
    code: number;
    message: string;
    data: AiAliyunOcr;
};

export type AiAliyunOcrPaginatePage = {
    count: number;
    list: Array<AiAliyunOcr>;
};

export type AiAliyunOcrPaginateResponse = {
    code: number;
    message: string;
    data: AiAliyunOcrPaginatePage;
};

export type AiAliyunOcrRecognizeAllText = {
    id: string;
    file: File;
    /**
     * 图片类型
     */
    type: string;
    /**
     * ocr识别结果
     */
    result: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunService = {
    id: string;
    /**
     * 服务名称
     */
    name: string;
    /**
     * 接口endpoint
     */
    endpoint: string;
    /**
     * 接口path
     */
    path: string;
    /**
     * model
     */
    model: string;
    type: AiServiceType;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunServiceGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiAliyunService>;
};

export type AiAliyunServiceGetResponse = {
    code: number;
    message: string;
    data: AiAliyunService;
};

export type AiAliyunServicePaginatePage = {
    count: number;
    list: Array<AiAliyunService>;
};

export type AiAliyunServicePaginateResponse = {
    code: number;
    message: string;
    data: AiAliyunServicePaginatePage;
};

export type AiAliyunSession = {
    id: string;
    /**
     * 会话名称
     */
    name: string;
    account: AiAliyunAccount;
    service: AiAliyunService;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiAliyunSessionGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiAliyunSession>;
};

export type AiAliyunSessionGetResponse = {
    code: number;
    message: string;
    data: AiAliyunSession;
};

export type AiAliyunSessionPaginatePage = {
    count: number;
    list: Array<AiAliyunSession>;
};

export type AiAliyunSessionPaginateResponse = {
    code: number;
    message: string;
    data: AiAliyunSessionPaginatePage;
};

export type AiBaiduAccount = {
    id: string;
    /**
     * Access Key
     */
    accessKey: string;
    /**
     * 名称
     */
    name: string;
    /**
     * Secret Key
     */
    secretKey: string;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduAccountGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiBaiduAccount>;
};

export type AiBaiduAccountGetHistoryResponse = {
    code: number;
    message: string;
    data: Array<AiBaiduMessage>;
};

export type AiBaiduAccountGetResponse = {
    code: number;
    message: string;
    data: AiBaiduAccount;
};

export type AiBaiduAccountPaginatePage = {
    count: number;
    list: Array<AiBaiduAccount>;
};

export type AiBaiduAccountPaginateResponse = {
    code: number;
    message: string;
    data: AiBaiduAccountPaginatePage;
};

export type AiBaiduMessage = {
    id: string;
    /**
     * role
     */
    role: string;
    /**
     * content
     */
    content: string;
    /**
     * queueId
     */
    qid: string;
    /**
     * 状态
     */
    status: string;
    session: AiBaiduSession;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduOcr = {
    id: string;
    /**
     * ocr任务名称
     */
    name: string;
    account: AiBaiduAccount;
    /**
     * 操作类型
     */
    type: string;
    generalScenarios: AiBaiduOrcGeneralScenarios;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduOcrGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiBaiduOcr>;
};

export type AiBaiduOcrGetResponse = {
    code: number;
    message: string;
    data: AiBaiduOcr;
};

export type AiBaiduOcrPaginatePage = {
    count: number;
    list: Array<AiBaiduOcr>;
};

export type AiBaiduOcrPaginateResponse = {
    code: number;
    message: string;
    data: AiBaiduOcrPaginatePage;
};

export type AiBaiduOrcGeneralScenarios = {
    id: string;
    file: File;
    /**
     * 识别文件页码
     */
    fileNumber: number;
    /**
     * 图片类型
     */
    type: string;
    /**
     * ocr识别结果
     */
    result: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduService = {
    id: string;
    /**
     * 服务名称
     */
    name: string;
    /**
     * 接口endpoint
     */
    endpoint: string;
    /**
     * 接口path
     */
    path: string;
    type: AiServiceType;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduServiceGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiBaiduService>;
};

export type AiBaiduServiceGetResponse = {
    code: number;
    message: string;
    data: AiBaiduService;
};

export type AiBaiduServicePaginatePage = {
    count: number;
    list: Array<AiBaiduService>;
};

export type AiBaiduServicePaginateResponse = {
    code: number;
    message: string;
    data: AiBaiduServicePaginatePage;
};

export type AiBaiduSession = {
    id: string;
    /**
     * 会话名称
     */
    name: string;
    account: AiBaiduAccount;
    service: AiBaiduService;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiBaiduSessionGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiBaiduSession>;
};

export type AiBaiduSessionGetResponse = {
    code: number;
    message: string;
    data: AiBaiduSession;
};

export type AiBaiduSessionPaginatePage = {
    count: number;
    list: Array<AiBaiduSession>;
};

export type AiBaiduSessionPaginateResponse = {
    code: number;
    message: string;
    data: AiBaiduSessionPaginatePage;
};

export type AiServiceType = {
    id: string;
    /**
     * 服务类型名称
     */
    name: string;
    /**
     * 值
     */
    value: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type AiServiceTypeGetAllResponse = {
    code: number;
    message: string;
    data: Array<AiServiceType>;
};

export type AiServiceTypeGetResponse = {
    code: number;
    message: string;
    data: AiServiceType;
};

export enum AliyunOcrOperates {
    RECOGNIZE_ALL_TEXT = 'RecognizeAllText'
}

export enum AliyunOcrRecognizeAllTextType {
    ADVANCED = 'Advanced',
    GENERAL = 'General',
    COMMERCE = 'Commerce',
    HAND_WRITING = 'HandWriting',
    MULTI_LANG = 'MultiLang',
    TABLE = 'Table',
    ID_CARD = 'IdCard',
    BANK_CARD = 'BankCard',
    INTERNATIONAL_PASSPORT = 'InternationalPassport',
    CHINESE_PASSPORT = 'ChinesePassport',
    SOCIAL_SECURITY_CARD = 'SocialSecurityCard',
    PERMIT_TO_HK_MO_TW = 'PermitToHK_MO_TW',
    PERMIT_TO_MAINLAND = 'PermitToMainland',
    HOUSEHOLD_HEAD = 'HouseholdHead',
    HOUSEHOLD_RESIDENT = 'HouseholdResident',
    ESTATE_CERTIFICATION = 'EstateCertification',
    BIRTH_CERTIFICATION = 'BirthCertification',
    HKID_CARD = 'HKIdCard',
    INTERNATIONAL_ID_CARD = 'InternationalIdCard',
    STAMP = 'Stamp',
    MIXED_INVOICE = 'MixedInvoice',
    INVOICE = 'Invoice',
    CAR_INVOICE = 'CarInvoice',
    QUOTA_INVOICE = 'QuotaInvoice',
    AIR_ITINERARY = 'AirItinerary',
    TRAIN_TICKET = 'TrainTicket',
    TOLL_INVOICE = 'TollInvoice',
    ROLL_TICKET = 'RollTicket',
    BANK_ACCEPTANCE = 'BankAcceptance',
    BUS_SHIP_TICKET = 'BusShipTicket',
    NON_TAX_INVOICE = 'NonTaxInvoice',
    COMMON_PRINTED_INVOICE = 'CommonPrintedInvoice',
    HOTEL_CONSUME = 'HotelConsume',
    PAYMENT_RECORD = 'PaymentRecord',
    PURCHASE_RECORD = 'PurchaseRecord',
    RIDE_HAILING_ITINERARY = 'RideHailingItinerary',
    SHOPPING_RECEIPT = 'ShoppingReceipt',
    TAX_CLEARANCE_CERTIFICATE = 'TaxClearanceCertificate',
    USED_CAR_INVOICE = 'UsedCarInvoice',
    VEHICLE_LICENSE = 'VehicleLicense',
    DRIVING_LICENSE = 'DrivingLicense',
    VEHICLE_REGISTRATION = 'VehicleRegistration',
    VEHICLE_CERTIFICATION = 'VehicleCertification',
    LICENSE_PLATE_NUMBER = 'LicensePlateNumber',
    CAR_VIN_CODE = 'CarVinCode',
    BUSINESS_LICENSE = 'BusinessLicense',
    INTERNATIONAL_BUSINESS_LICENSE = 'InternationalBusinessLicense',
    MEDICAL_DEVICE_MANAGE_LICENSE = 'MedicalDeviceManageLicense',
    MEDICAL_DEVICE_PRODUCE_LICENSE = 'MedicalDeviceProduceLicense',
    COSMETIC_PRODUCE_LICENSE = 'CosmeticProduceLicense',
    QR_CODE = 'QrCode',
    BAR_CODE = 'BarCode',
    TAXI_INVOICE = 'TaxiInvoice',
    TRADEMARK_CERTIFICATE = 'TrademarkCertificate',
    FOOD_PRODUCE_LICENSE = 'FoodProduceLicense',
    FOOD_MANAGEMENT_LICENSE = 'FoodManagementLicense',
    CLASS_IIMEDICAL_DEVICE_MANAGE_LICENSE = 'ClassIIMedicalDeviceManageLicense',
    WAY_BILL = 'WayBill',
    BANK_ACCOUNT_PERMIT = 'BankAccountPermit'
}

export type Area = {
    id: number;
    parentId: number;
    deep: number;
    name: string;
    pinyinPrefix: string;
    pinyin: string;
    extId: string;
    extName: string;
};

export type AreaResponse = {
    code: number;
    data: Array<Area>;
};

export type AuthLoginSuccessResponse = {
    code: number;
    data: Token;
};

export type AuthVerifyResponse = {
    code: number;
    data: boolean;
};

export enum BaiduGeneralScenariosType {
    GENERAL_BASIC = 'GeneralBasic'
}

export enum BaiduOcrOperates {
    GENERAL_SCENARIOS = 'GeneralScenarios'
}

export type BiDataMeta = {
    id: string;
    /**
     * 名称
     */
    name: string;
    /**
     * 描述
     */
    desc: string;
    structs: Array<BiDataStruct>;
    rule: BiDataRule;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type BiDataMetaGetAllResponse = {
    code: number;
    data: Array<BiDataMeta>;
};

export type BiDataMetaGetResponse = {
    code: number;
    data: BiDataMeta;
};

export type BiDataMetaPaginatePage = {
    list: Array<BiDataMeta>;
    count: number;
};

export type BiDataMetaPaginateResponse = {
    code: number;
    data: BiDataMetaPaginatePage;
};

export type BiDataRule = {
    id: string;
    /**
     * 类型
     */
    type: BiDataRuleType;
    excelFile: File;
    /**
     * sql
     */
    sql: string;
    meta: BiDataMeta;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type BiDataRuleGetResponse = {
    code: number;
    data: BiDataRule;
};

export enum BiDataRuleType {
    EXCEL = 'EXCEL',
    SQL = 'SQL',
    API = 'API'
}

export type BiDataStruct = {
    id: string;
    /**
     * 操作类型
     */
    type: BiDataStructType;
    /**
     * 字段名
     */
    name: string;
    /**
     * 字段分组
     */
    group: string;
    /**
     * 字段说明
     */
    desc: string;
    meta: BiDataMeta;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type BiDataStructGetAllResponse = {
    code: number;
    data: Array<BiDataStruct>;
};

export type BiDataStructGetResponse = {
    code: number;
    data: BiDataStruct;
};

export enum BiDataStructType {
    TEXT = 'TEXT',
    NUMBER = 'NUMBER',
    DATE = 'DATE',
    TIME = 'TIME',
    DATETIME = 'DATETIME',
    BOOLEAN = 'BOOLEAN',
    OBJECT = 'OBJECT',
    ARRAY = 'ARRAY',
    NULL = 'NULL',
    UNKNOWN = 'UNKNOWN'
}

export type Buffer = {
    [key: string]: unknown;
};

export type ChatContacts = {
    id: string;
    contacts: User;
    creator: User;
    status: ChatContactsTypeEnum;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ChatContactsCreateDto = {
    contactsId: string;
};

export type ChatContactsGetResponse = {
    code: number;
    message: string;
    data: Array<ChatContacts>;
};

export enum ChatContactsTypeEnum {
    UNKNOWN = 'unknown',
    WAITING_VERIFICATION = 'waiting_verification',
    CAN_PASS = 'can_pass',
    PASSED = 'passed',
    REFUSE = 'refuse',
    REFUSED = 'refused'
}

export type ChatContactsUpdateDto = {
    status: 'unknown' | 'waiting_verification' | 'can_pass' | 'passed' | 'refuse' | 'refused';
};

export enum status {
    UNKNOWN = 'unknown',
    WAITING_VERIFICATION = 'waiting_verification',
    CAN_PASS = 'can_pass',
    PASSED = 'passed',
    REFUSE = 'refuse',
    REFUSED = 'refused'
}

export type ChatMessage = {
    id: string;
    contacts: ChatContacts;
    type: ChatMessageTypeEnum;
    content: string;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ChatMessageCreateDto = {
    id: string;
    type: ChatMessageTypeEnum;
    content: string;
    contactsId: string;
};

export type ChatMessageGetResponse = {
    code: number;
    message: string;
    data: Array<ChatMessage>;
};

export enum ChatMessageTypeEnum {
    UNKNOWN = 'unknown',
    TEXT = 'text'
}

export type ChatSession = {
    id: string;
    contacts: ChatContacts;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ChatSessionCreateDto = {
    contactsId: string;
};

export type ChatSessionCreateResponse = {
    code: number;
    message: string;
    data: ChatSession;
};

export type ChatSessionGetResponse = {
    code: number;
    message: string;
    data: Array<ChatSession>;
};

export type CreateAiAliyunAccountDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * Access Key
     */
    accessKey: string;
    /**
     * Secret Key
     */
    secretKey: string;
    /**
     * Secret Key
     */
    dashscopeApiKey?: string;
};

export type CreateAiAliyunMessageDto = {
    /**
     * 消息内容
     */
    content: string;
    /**
     * 会话Id
     */
    sessionId: string;
};

export type CreateAiAliyunOcrDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * 账号信息
     */
    accountId: string;
    /**
     * 操作方法
     */
    type: AliyunOcrOperates;
    recognizeAllText: RecognizeAllText;
};

export type CreateAiAliyunServiceDto = {
    /**
     * 服务名称
     */
    name: string;
    /**
     * 接口endpoint
     */
    endpoint?: string;
    /**
     * 接口path
     */
    path?: string;
    /**
     * model
     */
    model?: string;
    /**
     * 服务类型
     */
    typeId: string;
};

export type CreateAiAliyunSessionDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * 账号
     */
    accountId: string;
    /**
     * 服务
     */
    serviceId: string;
};

export type CreateAiBaiduAccountDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * Access Key
     */
    accessKey: string;
    /**
     * Secret Key
     */
    secretKey: string;
};

export type CreateAiBaiduMessageDto = {
    /**
     * 消息内容
     */
    content: string;
    /**
     * 会话Id
     */
    sessionId: string;
};

export type CreateAiBaiduOcrDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * 账号信息
     */
    accountId: string;
    /**
     * 操作方法
     */
    type: BaiduOcrOperates;
    generalScenarios: GeneralScenarios;
};

export type CreateAiBaiduServiceDto = {
    /**
     * 服务名称
     */
    name: string;
    /**
     * 接口endpoint
     */
    endpoint?: string;
    /**
     * 接口path
     */
    path?: string;
    /**
     * 服务类型
     */
    typeId: string;
};

export type CreateAiBaiduSessionDto = {
    /**
     * 名称
     */
    name: string;
    /**
     * 账号
     */
    accountId: string;
    /**
     * 服务
     */
    serviceId: string;
};

export type CreateAiServiceTypeDto = {
    /**
     * 服务类型名称
     */
    name: string;
    /**
     * 服务类型值
     */
    value: string;
};

export type CreateAiSessionDto = {
    [key: string]: unknown;
};

export type CreateBiChartMetaDto = {
    [key: string]: unknown;
};

export type CreateBiDataMetaDto = {
    name: string;
    desc: string;
};

export type CreateBiDataRuleDto = {
    type: BiDataRuleType;
    excelFile: File;
    sql: string;
};

export type CreateBiDataStructDto = {
    type: BiDataStructType;
    name: string;
    group: string;
    desc: string;
};

export type CreateBiViewMetaDto = {
    [key: string]: unknown;
};

export type CreateFDto = {
    name: string;
    favorite?: boolean;
    parentId: string;
    /**
     * 路径类型
     */
    pathType: PathType;
    fileDetail?: FileDetailDto;
};

export type CreateResourceDto = {
    /**
     * 资源名称
     */
    name: string;
    /**
     * 资源key
     */
    key: string;
    /**
     * 资源描述
     */
    desc?: string;
};

export type CreateRolesDto = {
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色描述
     */
    desc?: string;
    /**
     * 角色关联资源id列表
     */
    resourceIds: Array<(string)>;
};

export type CreateSuperAdminDto = {
    /**
     * 用户名
     */
    username: string;
    /**
     * 密码
     */
    password: string;
};

export type CreateUsersDto = {
    /**
     * 用户名
     */
    username?: string;
    /**
     * 昵称
     */
    nickName?: string;
    /**
     * 用户密码
     */
    password?: string;
    mobile?: string;
    headimg?: string;
    /**
     * 角色列表
     */
    roleIds?: Array<(string)>;
};

export type DeleteSuccessResult = {
    code: number;
    data: {
        [key: string]: unknown;
    };
};

export type F = {
    id: string;
    name: string;
    favorite: boolean;
    /**
     * 路径类型
     */
    pathType: PathType;
    parent: F;
    children: Array<F>;
    fileDetail?: FileDetail;
    creator?: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type FGetAllResponse = {
    code: number;
    message: string;
    data: Array<F>;
};

export type FGetResponse = {
    code: number;
    message: string;
    data: F;
};

export type File = {
    id: string;
    /**
     * 名称
     */
    name: string;
    /**
     * 文件原名
     */
    originFileName: string;
    /**
     * 扩展名
     */
    ext: string;
    /**
     * 空间大小
     */
    size: number;
    content?: FileBuffer;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type FileBuffer = {
    id: string;
    /**
     * buffer
     */
    buffer: (Buffer);
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type FileDetail = {
    id: string;
    file?: File;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type FileDetailDto = {
    fileId: string;
};

export type FileGetResponse = {
    code: number;
    message: string;
    data: File;
};

export type FilesUploadDto = {
    files: Array<((Blob | File))>;
};

export type FileUploadDto = {
    file: (Blob | File);
};

export type FileUploadResponse = {
    code: number;
    message: string;
    data: UploadFileInfo;
};

export type ForumComment = {
    id: string;
    content: string;
    images: Array<(string)>;
    to: ForumComment;
    post: ForumPost;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ForumCommentCreateDto = {
    content: string;
    postId: string;
    images: Array<(string)>;
    toCommentId?: string;
};

export type ForumCommentGetAllResponse = {
    code: number;
    data: Array<ForumComment>;
};

export type ForumCommentGetCountResponse = {
    code: number;
    data: number;
};

export type ForumCommentGetResponse = {
    code: number;
    data: ForumComment;
};

export type ForumCommentPaginatePage = {
    list: Array<ForumComment>;
    count: number;
};

export type ForumCommentPaginateResponse = {
    code: number;
    data: ForumCommentPaginatePage;
};

export type ForumPost = {
    id: string;
    title: string;
    content: string;
    images: Array<(string)>;
    creator: User;
    section: ForumSection;
    comments: Array<ForumComment>;
    zans: Array<ForumPostRelation>;
    collects: Array<ForumPostRelation>;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ForumPostCreateDto = {
    title: string;
    content: string;
    images: Array<(string)>;
    sectionId: string;
};

export type ForumPostGetAllResponse = {
    code: number;
    data: ForumPost;
};

export type ForumPostGetCountResponse = {
    code: number;
    data: number;
};

export type ForumPostGetResponse = {
    code: number;
    data: ForumPost;
};

export type ForumPostPaginatePage = {
    list: Array<ForumPost>;
    count: number;
};

export type ForumPostPaginateResponse = {
    code: number;
    data: ForumPostPaginatePage;
};

export type ForumPostRelation = {
    id: string;
    creator: User;
    post: ForumPost;
    type: 'unknown' | 'zan' | 'collect';
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export enum type {
    UNKNOWN = 'unknown',
    ZAN = 'zan',
    COLLECT = 'collect'
}

export type ForumPostRelationCreateDto = {
    type: 'unknown' | 'zan' | 'collect';
    postId: string;
};

export type ForumPostRelationGetAllResponse = {
    code: number;
    data: Array<ForumPostRelation>;
};

export type ForumPostRelationGetCountResponse = {
    code: number;
    data: number;
};

export type ForumPostRelationPaginatePage = {
    list: Array<ForumPostRelation>;
    count: number;
};

export type ForumPostRelationPaginateResponse = {
    code: number;
    data: ForumPostRelationPaginatePage;
};

export type ForumPostUpdateDto = {
    title: string;
    content: string;
    images: Array<(string)>;
};

export type ForumSection = {
    id: string;
    name: string;
    desc: string;
    creator: User;
    posts: Array<ForumPost>;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ForumSectionCreateDto = {
    name: string;
    desc: string;
};

export type ForumSectionGetAllResponse = {
    code: number;
    data: Array<ForumSection>;
};

export type ForumSectionGetResponse = {
    code: number;
    data: ForumSection;
};

export type ForumSectionPaginatePage = {
    list: Array<ForumSection>;
    count: number;
};

export type ForumSectionPaginateResponse = {
    code: number;
    data: ForumSectionPaginatePage;
};

export type ForumSectionUpdateDto = {
    name: string;
    desc: string;
};

export type GeneralScenarios = {
    /**
     * 识别类型
     */
    type: BaiduGeneralScenariosType;
    /**
     * 文件
     */
    fileId: string;
    /**
     * 识别文件页码
     */
    fileNumber: string;
};

export type GetJssdkSignatureDto = {
    debug: boolean;
    url: string;
    jsApiList: Array<(string)>;
};

export type GetPhoneNumberResponse = {
    code: number;
    data: PhoneInfo;
};

export type GoodInfo = {
    goodId: string;
    count: number;
};

export type InsertSuccessResult = {
    code: number;
    data: {
        [key: string]: unknown;
    };
};

export type LoginByCodeDto = {
    code: string;
};

export type LoginBySmsCodeDto = {
    /**
     * 手机号
     */
    mobile: string;
    /**
     * 验证码
     */
    code: string;
};

export type LoginByWeixinDto = {
    appid: string;
    code: string;
};

export type LoginDto = {
    /**
     * 用户名
     */
    username: string;
    /**
     * 用户密码
     */
    password: string;
};

export type MallCart = {
    id: string;
    user: User;
    good: MallGood;
    count: number;
    checked: boolean;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallCartBatchUpdateDto = {
    ids: Array<(string)>;
    checked?: boolean;
};

export type MallCartCreateDto = {
    goodId: string;
    count: number;
};

export type MallCartGetAllResponse = {
    code: number;
    message: string;
    data: Array<MallCart>;
};

export type MallCartUpdateDto = {
    count?: number;
    checked?: boolean;
};

export type MallGood = {
    id: string;
    title: string;
    desc: string;
    group: MallGoodGroup;
    headimg: string;
    /**
     * 单位分
     */
    price: number;
    images: Array<(string)>;
    detail: string;
    shop: MallShop;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallGoodComment = {
    id: string;
    creator: User;
    good: MallGood;
    content: string;
    images: Array<(string)>;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallGoodCommentCreateDto = {
    goodId: string;
    content: string;
    images: Array<(string)>;
};

export type MallGoodCommentPaginatePageInfo = {
    list: Array<MallGoodComment>;
    count: number;
};

export type MallGoodCommentPaginateResponse = {
    code: number;
    message: string;
    data: MallGoodCommentPaginatePageInfo;
};

export type MallGoodCommentPaginateWidthCursorPageInfo = {
    list: Array<MallGoodComment>;
    count: number;
};

export type MallGoodCommentPaginateWidthCursorResponse = {
    code: number;
    message: string;
    data: MallGoodCommentPaginateWidthCursorPageInfo;
};

export type MallGoodCreateDto = {
    title: string;
    desc: string;
    groupId: string;
    headimg: string;
    price: number;
    images: Array<(string)>;
    detail: string;
    shopId: string;
};

export type MallGoodGetAllResponse = {
    [key: string]: unknown;
};

export type MallGoodGetResponse = {
    code: number;
    message: string;
    data: MallGood;
};

export type MallGoodGroup = {
    id: string;
    name: string;
    headimg: string;
    parent: MallGoodGroup;
    children: Array<MallGoodGroup>;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallGoodGroupCreateDto = {
    name: string;
    headimg: string;
    parentId?: string;
};

export type MallGoodGroupGetAllResponse = {
    code: number;
    message: string;
    data: Array<MallGoodGroup>;
};

export type MallGoodGroupGetResponse = {
    code: number;
    message: string;
    data: MallGoodGroup;
};

export type MallGoodGroupGetTreeResponse = {
    code: number;
    message: string;
    data: Array<MallGoodGroup>;
};

export type MallGoodGroupUpdateDto = {
    name: string;
    headimg: string;
};

export type MallGoodPaginatePage = {
    count: number;
    list: Array<MallGood>;
};

export type MallGoodPaginateResponse = {
    code: number;
    message: string;
    data: MallGoodPaginatePage;
};

export type MallGoodRelation = {
    id: string;
    user: User;
    good: MallGood;
    type: 'unknown' | 'collect';
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export enum type2 {
    UNKNOWN = 'unknown',
    COLLECT = 'collect'
}

export type MallGoodRelationCreateDto = {
    goodId: string;
    type: 'unknown' | 'collect';
};

export type MallGoodRelationGetResponse = {
    code: number;
    message: string;
    data: MallGoodRelation;
};

export type MallGoodTabGetAllResponse = {
    code: number;
    message: string;
    data: Array<MallGoodTag>;
};

export type MallGoodTag = {
    id: string;
    name: string;
    desc: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallGoodTagCreateDto = {
    name: string;
    desc: string;
};

export type MallGoodTagGetResponse = {
    code: number;
    message: string;
    data: MallGoodTag;
};

export type MallGoodTagPaginatePageInfo = {
    list: Array<MallGoodTag>;
    count: number;
};

export type MallGoodTagPaginateResponse = {
    code: number;
    message: string;
    data: MallGoodTagPaginatePageInfo;
};

export type MallGoodTagUpdateDto = {
    desc: string;
};

export type MallGoodUpdateDto = {
    title: string;
    desc: string;
    groupId: string;
    headimg: string;
    price: number;
    images: Array<(string)>;
    detail: string;
};

export type MallOrder = {
    id: string;
    creator: User;
    address: Address;
    goods: Array<MallOrderGood>;
    status: number;
    price: number;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallOrderCreateDto = {
    addressId: string;
    goods: Array<GoodInfo>;
};

export type MallOrderGetResponse = {
    code: number;
    message: string;
    data: MallOrder;
};

export type MallOrderGood = {
    id: string;
    order: MallOrder;
    good: MallGood;
    count: number;
    price: number;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallOrderPageWidthCursorPageInfo = {
    list: Array<MallOrder>;
    count: number;
};

export type MallOrderPageWidthCursorResponse = {
    code: number;
    message: string;
    data: MallOrderPageWidthCursorPageInfo;
};

export type MallOrderPaginatePageInfo = {
    list: Array<MallOrder>;
    count: number;
};

export type MallOrderPaginateResponse = {
    code: number;
    message: string;
    data: MallOrderPaginatePageInfo;
};

export type MallShop = {
    id: string;
    name: string;
    headimg: string;
    desc: string;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type MallShopCreateDto = {
    name: string;
    desc: string;
    headimg: string;
};

export type MallShopGetAllResponse = {
    code: number;
    message: string;
    data: Array<MallShop>;
};

export type MallShopGetResponse = {
    code: number;
    message: string;
    data: MallShop;
};

export type MallShopPaginatePage = {
    count: number;
    list: Array<MallShop>;
};

export type MallShopPaginateResponse = {
    code: number;
    message: string;
    data: MallShopPaginatePage;
};

export type MallShopUpdateDto = {
    name: string;
    desc: string;
    headimg: string;
};

export type Password = {
    /**
     * 用户id
     */
    id: string;
    /**
     * 密码
     */
    password: string;
};

export enum PathType {
    UNKNOWN = 'unknown',
    FILE = 'file',
    DIR = 'dir'
}

export type PhoneInfo = {
    phoneNumber: string;
    purePhoneNumber: string;
    countryCode: number;
    watermark: Watermark;
};

export type RecognizeAllText = {
    /**
     * 识别类型
     */
    type: AliyunOcrRecognizeAllTextType;
    /**
     * 文件
     */
    fileId: string;
};

export type Resource = {
    /**
     * 资源id
     */
    id: string;
    /**
     * 资源名称
     */
    name: string;
    /**
     * 资源key
     */
    key: string;
    /**
     * 资源描述
     */
    desc: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type ResourceGetAllSuccessResult = {
    code: number;
    data: Array<Resource>;
};

export type ResourceGetSuccessResult = {
    code: number;
    data: Resource;
};

export type ResourcePaginateResult = {
    list: Array<Resource>;
    count: number;
};

export type ResourcePaginateSuccessResult = {
    code: number;
    data: ResourcePaginateResult;
};

export type Role = {
    /**
     * 角色id
     */
    id: string;
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色描述
     */
    desc: string;
    /**
     * 资源列表
     */
    resources: Array<Resource>;
    creator: User;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type RoleGetAllSuccessResponse = {
    code: number;
    data: Array<Role>;
};

export type RoleGetSuccessResponse = {
    code: number;
    data: Role;
};

export type RolesPaginateResult = {
    list: Array<Role>;
    count: number;
};

export type RolesPaginateSuccessResponse = {
    code: number;
    data: RolesPaginateResult;
};

export type SendTemplateDto = {
    templateId: string;
    openId: string;
    data: {
        [key: string]: unknown;
    };
};

export type SessionGetUserResponse = {
    code: number;
    data: User;
};

export type SessionInfo = {
    openid: string;
    unionid: string;
    session_key: string;
};

export type Setting = {
    id: string;
    key: string;
    value: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type SettingGetItemsSuccessResponse = {
    code: number;
    data: Array<Setting>;
};

export type SettingSetDto = {
    data: Array<StoreItem>;
};

export type SmsTestDto = {
    phone: string;
    code: string;
};

export type StoreItem = {
    key: string;
    value: string;
};

export type SuccessResult = {
    code: number;
    data: {
        [key: string]: unknown;
    };
};

export type Token = {
    access_token: string;
};

export type TreeDataResponse = {
    code: number;
    data: Array<TreeNode>;
};

export type TreeNode = {
    id: number;
    parentId: number;
    name: string;
    children: Array<TreeNode>;
};

export type UpdateAiAliyunAccountDto = {
    /**
     * 名称
     */
    name?: string;
    /**
     * Access Key
     */
    accessKey?: string;
    /**
     * Secret Key
     */
    secretKey?: string;
    /**
     * Secret Key
     */
    dashscopeApiKey?: string;
};

export type UpdateAiAliyunServiceDto = {
    /**
     * 服务名称
     */
    name?: string;
    /**
     * 接口endpoint
     */
    endpoint?: string;
    /**
     * 接口path
     */
    path?: string;
    /**
     * model
     */
    model?: string;
    /**
     * 服务类型
     */
    typeId?: string;
};

export type UpdateAiAliyunSessionDto = {
    /**
     * 名称
     */
    name?: string;
    /**
     * 账号
     */
    accountId?: string;
    /**
     * 服务
     */
    serviceId?: string;
};

export type UpdateAiBaiduAccountDto = {
    /**
     * 名称
     */
    name?: string;
    /**
     * Access Key
     */
    accessKey?: string;
    /**
     * Secret Key
     */
    secretKey?: string;
};

export type UpdateAiBaiduServiceDto = {
    /**
     * 服务名称
     */
    name?: string;
    /**
     * 接口endpoint
     */
    endpoint?: string;
    /**
     * 接口path
     */
    path?: string;
    /**
     * 服务类型
     */
    typeId?: string;
};

export type UpdateAiBaiduSessionDto = {
    /**
     * 名称
     */
    name?: string;
    /**
     * 账号
     */
    accountId?: string;
    /**
     * 服务
     */
    serviceId?: string;
};

export type UpdateAiServiceTypeDto = {
    /**
     * 服务类型名称
     */
    name?: string;
    /**
     * 服务类型值
     */
    value?: string;
};

export type UpdateAiSessionDto = {
    [key: string]: unknown;
};

export type UpdateBiChartMetaDto = {
    [key: string]: unknown;
};

export type UpdateBiDataMetaDto = {
    name?: string;
    desc?: string;
};

export type UpdateBiDataRuleDto = {
    type?: BiDataRuleType;
    excelFile?: File;
    sql?: string;
};

export type UpdateBiDataStructDto = {
    type?: BiDataStructType;
    name?: string;
    group?: string;
    desc?: string;
};

export type UpdateBiViewMetaDto = {
    [key: string]: unknown;
};

export type UpdateFDto = {
    name?: string;
    favorite?: boolean;
    parentId?: string;
    /**
     * 路径类型
     */
    pathType?: PathType;
    fileDetail?: FileDetailDto;
};

export type UpdateResourceDto = {
    /**
     * 资源名称
     */
    key: string;
    /**
     * 资源描述
     */
    desc: string;
};

export type UpdateRoleDto = {
    /**
     * 角色描述
     */
    desc?: string;
    /**
     * 角色关联资源id列表
     */
    resourceIds: Array<(string)>;
};

export type UpdateSuccessResult = {
    code: number;
    data: {
        [key: string]: unknown;
    };
};

export type UploadFileInfo = {
    url: string;
    fileId: string;
    entity: File;
};

export type User = {
    /**
     * 用户id
     */
    id: string;
    /**
     * 用户名
     */
    username: string;
    password: Password;
    /**
     * 昵称
     */
    nickName: string;
    headimg: string;
    /**
     * 手机号
     */
    mobile: string;
    /**
     * 是否活跃
     */
    isActive: boolean;
    /**
     * 是否为超级管理员
     */
    isSuper: number;
    /**
     * 角色
     */
    roles: Array<Role>;
    weixinPlatformUsers: Array<WeixinPlatformUser>;
    addresses: Array<Address>;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type UserGetAllSuccessResponse = {
    code: number;
    data: Array<User>;
};

export type UserGetSuccessResponse = {
    code: number;
    data: User;
};

export type UsersBindMobileDto = {
    mobile: string;
    code: string;
};

export type UsersBindUsernameDto = {
    username: string;
    password: string;
};

export type UsersBindWeixinDto = {
    appid: string;
    code: string;
};

export type UsersPaginateResult = {
    list: Array<User>;
    count: number;
};

export type UsersPaginateSuccessResponse = {
    code: number;
    data: UsersPaginateResult;
};

export type UserUpdateDto = {
    /**
     * 角色列表
     */
    roleIds: Array<(string)>;
    username?: string;
    nickName?: string;
    mobile?: string;
    headimg?: string;
};

export type Watermark = {
    timestamp: number;
    appid: string;
};

export type Weixin = {
    id: string;
    name: string;
    appid: string;
    appSecret: string;
    appType: 'app' | 'mp' | 'web' | 'official_account';
    weixinPlatformUsers?: Array<WeixinPlatformUser>;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export enum appType {
    APP = 'app',
    MP = 'mp',
    WEB = 'web',
    OFFICIAL_ACCOUNT = 'official_account'
}

export type WeixinCreateDto = {
    name: string;
    appid: string;
    appSecret: string;
    appType: string;
};

export type WeixinGetAllResponse = {
    code: number;
    data: Array<Weixin>;
};

export type WeixinGetSuccessResponse = {
    code: number;
    data: Weixin;
};

export type WeixinMiniProgramCodeToSessionResponse = {
    code: number;
    data: SessionInfo;
};

export type WeixinOfficialAccountConfig = {
    id: string;
    token: string;
    encodingAesKey: string;
    checkSignature: boolean;
    weixin?: Weixin;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type WeixinOfficialAccountConfigGetByWeixinSuccessResponse = {
    code: number;
    data: WeixinOfficialAccountConfig;
};

export type WeixinOfficialAccountConfigUpdateDto = {
    token: string;
    encodingAesKey: string;
    checkSignature: boolean;
};

export type WeixinOfficialAccountGetAccessTokenResponse = {
    code: number;
    data: AccessToken;
};

export type WeixinOfficialAccountGetNotifyUrlResponse = {
    code: number;
    data: string;
};

export type WeixinPaginateResult = {
    list: Array<Weixin>;
    count: number;
};

export type WeixinPaginateSuccessResponse = {
    code: number;
    data: WeixinPaginateResult;
};

export type WeixinPay = {
    id: string;
    name: string;
    mchid: string;
    partnerKey: string;
    pfx: string;
    notifyUrl: string;
    spbillCreateIp: string;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type WeixinPayCenterGetPayParamsDto = {
    out_trade_no: string;
    body: string;
    total_fee: number;
    openid: string;
};

export type WeixinPayCenterGetPayParamsResponse = {
    code: number;
    message: string;
    data: WeixinPayCenterGetPayParamsResult;
};

export type WeixinPayCenterGetPayParamsResult = {
    appid: string;
    time_stamp: string;
    nonce_str: string;
    package: string;
    sign_type: string;
};

export type WeixinPayCreateDto = {
    name: string;
    mchid: string;
    partnerKey: string;
    pfx: string;
    notifyUrl: string;
    spbillCreateIp: string;
};

export type WeixinPayGetResponse = {
    code: number;
    message: string;
    data: WeixinPay;
};

export type WeixinPayPaginatePageInfo = {
    list: Array<WeixinPay>;
    count: number;
};

export type WeixinPayPaginateResponse = {
    code: number;
    message: string;
    data: WeixinPayPaginatePageInfo;
};

export type WeixinPayUpdateDto = {
    name: string;
    mchid: string;
    partnerKey: string;
    pfx?: string;
    notifyUrl: string;
    spbillCreateIp: string;
};

export type WeixinPlatformUser = {
    id: string;
    user?: User;
    weixin?: Weixin;
    /**
     * 创建时间
     */
    createDate: string;
    /**
     * 更新时间
     */
    updateDate: string;
};

export type WeixinPlatformUserPaginatePage = {
    count: number;
    list: Array<WeixinPlatformUser>;
};

export type WeixinPlatformUserPaginateResponse = {
    code: number;
    data: WeixinPlatformUserPaginatePage;
};

export type WeixinUpdateDto = {
    appSecret: string;
    appType: string;
};

export type PostApiAddressCreateSessionData = {
    body: AddressCreateSessionDto;
};

export type PostApiAddressCreateSessionResponse = (SuccessResult);

export type PostApiAddressCreateSessionError = unknown;

export type GetApiAddressGetAllSessionResponse = (AddressGetAllSessionResponse);

export type GetApiAddressGetAllSessionError = unknown;

export type DeleteApiAddressByIdSessionData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiAddressByIdSessionResponse = (SuccessResult);

export type DeleteApiAddressByIdSessionError = unknown;

export type PutApiAddressByIdSessionData = {
    body: AddressUpdateSessionDto;
    path: {
        id: unknown;
    };
};

export type PutApiAddressByIdSessionResponse = (SuccessResult);

export type PutApiAddressByIdSessionError = unknown;

export type GetApiAddressByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiAddressByIdResponse = (AddressGetResponse);

export type GetApiAddressByIdError = unknown;

export type PostApiAiAliyunAccountData = {
    body: CreateAiAliyunAccountDto;
};

export type PostApiAiAliyunAccountResponse = (InsertSuccessResult);

export type PostApiAiAliyunAccountError = unknown;

export type GetApiAiAliyunAccountResponse = (AiAliyunAccountGetAllResponse);

export type GetApiAiAliyunAccountError = unknown;

export type GetApiAiAliyunAccountPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiAliyunAccountPaginateResponse = (AiAliyunAccountPaginateResponse);

export type GetApiAiAliyunAccountPaginateError = unknown;

export type GetApiAiAliyunAccountByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiAliyunAccountByIdResponse = (AiAliyunAccountGetResponse);

export type GetApiAiAliyunAccountByIdError = unknown;

export type PatchApiAiAliyunAccountByIdData = {
    body: UpdateAiAliyunAccountDto;
    path: {
        id: string;
    };
};

export type PatchApiAiAliyunAccountByIdResponse = (UpdateSuccessResult);

export type PatchApiAiAliyunAccountByIdError = unknown;

export type DeleteApiAiAliyunAccountByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiAliyunAccountByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiAliyunAccountByIdError = unknown;

export type PostApiAiAliyunMessageData = {
    body: CreateAiAliyunMessageDto;
};

export type PostApiAiAliyunMessageResponse = (InsertSuccessResult);

export type PostApiAiAliyunMessageError = unknown;

export type GetApiAiAliyunMessageData = {
    query: {
        /**
         * sessionId
         */
        sessionId: string;
    };
};

export type GetApiAiAliyunMessageResponse = (AiAliyunAccountGetHistoryResponse);

export type GetApiAiAliyunMessageError = unknown;

export type PostApiAiAliyunOcrData = {
    body: CreateAiAliyunOcrDto;
};

export type PostApiAiAliyunOcrResponse = (InsertSuccessResult);

export type PostApiAiAliyunOcrError = unknown;

export type GetApiAiAliyunOcrResponse = (AiAliyunOcrGetAllResponse);

export type GetApiAiAliyunOcrError = unknown;

export type GetApiAiAliyunOcrPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiAliyunOcrPaginateResponse = (AiAliyunOcrPaginateResponse);

export type GetApiAiAliyunOcrPaginateError = unknown;

export type GetApiAiAliyunOcrByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiAliyunOcrByIdResponse = (AiAliyunOcrGetResponse);

export type GetApiAiAliyunOcrByIdError = unknown;

export type PutApiAiAliyunOcrByIdData = {
    path: {
        id: string;
    };
};

export type PutApiAiAliyunOcrByIdResponse = (UpdateSuccessResult);

export type PutApiAiAliyunOcrByIdError = unknown;

export type PostApiAiAliyunServiceData = {
    body: CreateAiAliyunServiceDto;
};

export type PostApiAiAliyunServiceResponse = (InsertSuccessResult);

export type PostApiAiAliyunServiceError = unknown;

export type GetApiAiAliyunServiceResponse = (AiAliyunServiceGetAllResponse);

export type GetApiAiAliyunServiceError = unknown;

export type GetApiAiAliyunServicePaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiAliyunServicePaginateResponse = (AiAliyunServicePaginateResponse);

export type GetApiAiAliyunServicePaginateError = unknown;

export type GetApiAiAliyunServiceByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiAliyunServiceByIdResponse = (AiAliyunServiceGetResponse);

export type GetApiAiAliyunServiceByIdError = unknown;

export type PatchApiAiAliyunServiceByIdData = {
    body: UpdateAiAliyunServiceDto;
    path: {
        id: string;
    };
};

export type PatchApiAiAliyunServiceByIdResponse = (UpdateSuccessResult);

export type PatchApiAiAliyunServiceByIdError = unknown;

export type DeleteApiAiAliyunServiceByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiAliyunServiceByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiAliyunServiceByIdError = unknown;

export type PostApiAiAliyunSessionData = {
    body: CreateAiAliyunSessionDto;
};

export type PostApiAiAliyunSessionResponse = (InsertSuccessResult);

export type PostApiAiAliyunSessionError = unknown;

export type GetApiAiAliyunSessionResponse = (AiAliyunSessionGetAllResponse);

export type GetApiAiAliyunSessionError = unknown;

export type GetApiAiAliyunSessionPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiAliyunSessionPaginateResponse = (AiAliyunSessionPaginateResponse);

export type GetApiAiAliyunSessionPaginateError = unknown;

export type GetApiAiAliyunSessionByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiAliyunSessionByIdResponse = (AiAliyunSessionGetResponse);

export type GetApiAiAliyunSessionByIdError = unknown;

export type PatchApiAiAliyunSessionByIdData = {
    body: UpdateAiAliyunSessionDto;
    path: {
        id: string;
    };
};

export type PatchApiAiAliyunSessionByIdResponse = (UpdateSuccessResult);

export type PatchApiAiAliyunSessionByIdError = unknown;

export type DeleteApiAiAliyunSessionByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiAliyunSessionByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiAliyunSessionByIdError = unknown;

export type PostApiAiBaiduAccountData = {
    body: CreateAiBaiduAccountDto;
};

export type PostApiAiBaiduAccountResponse = (InsertSuccessResult);

export type PostApiAiBaiduAccountError = unknown;

export type GetApiAiBaiduAccountResponse = (AiBaiduAccountGetAllResponse);

export type GetApiAiBaiduAccountError = unknown;

export type GetApiAiBaiduAccountPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiBaiduAccountPaginateResponse = (AiBaiduAccountPaginateResponse);

export type GetApiAiBaiduAccountPaginateError = unknown;

export type GetApiAiBaiduAccountByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiBaiduAccountByIdResponse = (AiBaiduAccountGetResponse);

export type GetApiAiBaiduAccountByIdError = unknown;

export type PatchApiAiBaiduAccountByIdData = {
    body: UpdateAiBaiduAccountDto;
    path: {
        id: string;
    };
};

export type PatchApiAiBaiduAccountByIdResponse = (UpdateSuccessResult);

export type PatchApiAiBaiduAccountByIdError = unknown;

export type DeleteApiAiBaiduAccountByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiBaiduAccountByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiBaiduAccountByIdError = unknown;

export type PostApiAiBaiduMessageData = {
    body: CreateAiBaiduMessageDto;
};

export type PostApiAiBaiduMessageResponse = (InsertSuccessResult);

export type PostApiAiBaiduMessageError = unknown;

export type GetApiAiBaiduMessageData = {
    query: {
        /**
         * sessionId
         */
        sessionId: string;
    };
};

export type GetApiAiBaiduMessageResponse = (AiBaiduAccountGetHistoryResponse);

export type GetApiAiBaiduMessageError = unknown;

export type PostApiAiBaiduOcrData = {
    body: CreateAiBaiduOcrDto;
};

export type PostApiAiBaiduOcrResponse = (InsertSuccessResult);

export type PostApiAiBaiduOcrError = unknown;

export type GetApiAiBaiduOcrResponse = (AiBaiduOcrGetAllResponse);

export type GetApiAiBaiduOcrError = unknown;

export type GetApiAiBaiduOcrPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiBaiduOcrPaginateResponse = (AiBaiduOcrPaginateResponse);

export type GetApiAiBaiduOcrPaginateError = unknown;

export type GetApiAiBaiduOcrByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiBaiduOcrByIdResponse = (AiBaiduOcrGetResponse);

export type GetApiAiBaiduOcrByIdError = unknown;

export type PostApiAiBaiduServiceData = {
    body: CreateAiBaiduServiceDto;
};

export type PostApiAiBaiduServiceResponse = (InsertSuccessResult);

export type PostApiAiBaiduServiceError = unknown;

export type GetApiAiBaiduServiceResponse = (AiBaiduServiceGetAllResponse);

export type GetApiAiBaiduServiceError = unknown;

export type GetApiAiBaiduServicePaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiBaiduServicePaginateResponse = (AiBaiduServicePaginateResponse);

export type GetApiAiBaiduServicePaginateError = unknown;

export type GetApiAiBaiduServiceByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiBaiduServiceByIdResponse = (AiBaiduServiceGetResponse);

export type GetApiAiBaiduServiceByIdError = unknown;

export type PatchApiAiBaiduServiceByIdData = {
    body: UpdateAiBaiduServiceDto;
    path: {
        id: string;
    };
};

export type PatchApiAiBaiduServiceByIdResponse = (UpdateSuccessResult);

export type PatchApiAiBaiduServiceByIdError = unknown;

export type DeleteApiAiBaiduServiceByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiBaiduServiceByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiBaiduServiceByIdError = unknown;

export type PostApiAiBaiduSessionData = {
    body: CreateAiBaiduSessionDto;
};

export type PostApiAiBaiduSessionResponse = (InsertSuccessResult);

export type PostApiAiBaiduSessionError = unknown;

export type GetApiAiBaiduSessionResponse = (AiBaiduSessionGetAllResponse);

export type GetApiAiBaiduSessionError = unknown;

export type GetApiAiBaiduSessionPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiAiBaiduSessionPaginateResponse = (AiBaiduSessionPaginateResponse);

export type GetApiAiBaiduSessionPaginateError = unknown;

export type GetApiAiBaiduSessionByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiBaiduSessionByIdResponse = (AiBaiduSessionGetResponse);

export type GetApiAiBaiduSessionByIdError = unknown;

export type PatchApiAiBaiduSessionByIdData = {
    body: UpdateAiBaiduSessionDto;
    path: {
        id: string;
    };
};

export type PatchApiAiBaiduSessionByIdResponse = (UpdateSuccessResult);

export type PatchApiAiBaiduSessionByIdError = unknown;

export type DeleteApiAiBaiduSessionByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiBaiduSessionByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiBaiduSessionByIdError = unknown;

export type PostApiAiCommonServiceTypeData = {
    body: CreateAiServiceTypeDto;
};

export type PostApiAiCommonServiceTypeResponse = (InsertSuccessResult);

export type PostApiAiCommonServiceTypeError = unknown;

export type GetApiAiCommonServiceTypeResponse = (AiServiceTypeGetAllResponse);

export type GetApiAiCommonServiceTypeError = unknown;

export type GetApiAiCommonServiceTypeByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiCommonServiceTypeByIdResponse = (AiServiceTypeGetResponse);

export type GetApiAiCommonServiceTypeByIdError = unknown;

export type PatchApiAiCommonServiceTypeByIdData = {
    body: UpdateAiServiceTypeDto;
    path: {
        id: string;
    };
};

export type PatchApiAiCommonServiceTypeByIdResponse = (UpdateSuccessResult);

export type PatchApiAiCommonServiceTypeByIdError = unknown;

export type DeleteApiAiCommonServiceTypeByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiCommonServiceTypeByIdResponse = (DeleteSuccessResult);

export type DeleteApiAiCommonServiceTypeByIdError = unknown;

export type GetApiAreaProvincesData = {
    query: {
        countryId: unknown;
    };
};

export type GetApiAreaProvincesResponse = (AreaResponse);

export type GetApiAreaProvincesError = unknown;

export type GetApiAreaCitiesData = {
    query: {
        provinceId: unknown;
    };
};

export type GetApiAreaCitiesResponse = (AreaResponse);

export type GetApiAreaCitiesError = unknown;

export type GetApiAreaRegionsData = {
    query: {
        cityId: unknown;
    };
};

export type GetApiAreaRegionsResponse = (AreaResponse);

export type GetApiAreaRegionsError = unknown;

export type GetApiAreaTreeDataResponse = (TreeDataResponse);

export type GetApiAreaTreeDataError = unknown;

export type GetApiAuthVerifyResponse = (AuthVerifyResponse);

export type GetApiAuthVerifyError = unknown;

export type DeleteApiAuthCancellationResponse = (SuccessResult);

export type DeleteApiAuthCancellationError = unknown;

export type PostApiAuthLoginData = {
    body: LoginDto;
};

export type PostApiAuthLoginResponse = (AuthLoginSuccessResponse);

export type PostApiAuthLoginError = unknown;

export type PostApiAuthLoginBySmsCodeData = {
    body: LoginBySmsCodeDto;
};

export type PostApiAuthLoginBySmsCodeResponse = (AuthLoginSuccessResponse);

export type PostApiAuthLoginBySmsCodeError = unknown;

export type PostApiAuthLoginByWeixinData = {
    body: LoginByWeixinDto;
};

export type PostApiAuthLoginByWeixinResponse = (AuthLoginSuccessResponse);

export type PostApiAuthLoginByWeixinError = unknown;

export type PostApiAuthLoginByWeixinMobileData = {
    body: LoginByWeixinDto;
};

export type PostApiAuthLoginByWeixinMobileResponse = (AuthLoginSuccessResponse);

export type PostApiAuthLoginByWeixinMobileError = unknown;

export type PostApiAuthLoginByCodeData = {
    body: LoginByCodeDto;
};

export type PostApiAuthLoginByCodeResponse = (unknown);

export type PostApiAuthLoginByCodeError = unknown;

export type GetApiAuthAuthenticateResponse = (unknown);

export type GetApiAuthAuthenticateError = unknown;

export type GetApiBiDataMetaResponse = (BiDataMetaGetAllResponse);

export type GetApiBiDataMetaError = unknown;

export type PostApiBiDataMetaData = {
    body: CreateBiDataMetaDto;
};

export type PostApiBiDataMetaResponse = (SuccessResult);

export type PostApiBiDataMetaError = unknown;

export type GetApiBiDataMetaByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiBiDataMetaByIdResponse = (BiDataMetaGetResponse);

export type GetApiBiDataMetaByIdError = unknown;

export type DeleteApiBiDataMetaByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiBiDataMetaByIdResponse = (SuccessResult);

export type DeleteApiBiDataMetaByIdError = unknown;

export type PutApiBiDataMetaByIdData = {
    body: UpdateBiDataMetaDto;
    path: {
        id: unknown;
    };
};

export type PutApiBiDataMetaByIdResponse = (SuccessResult);

export type PutApiBiDataMetaByIdError = unknown;

export type GetApiBiDataMetaPageAllData = {
    query: {
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiBiDataMetaPageAllResponse = (BiDataMetaPaginateResponse);

export type GetApiBiDataMetaPageAllError = unknown;

export type GetApiBiDataMetaByMetaIdStructResponse = (BiDataStructGetAllResponse);

export type GetApiBiDataMetaByMetaIdStructError = unknown;

export type PostApiBiDataMetaByMetaIdStructData = {
    body: CreateBiDataStructDto;
    path: {
        metaId: string;
    };
};

export type PostApiBiDataMetaByMetaIdStructResponse = (SuccessResult);

export type PostApiBiDataMetaByMetaIdStructError = unknown;

export type GetApiBiDataStructByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiBiDataStructByIdResponse = (BiDataStructGetResponse);

export type GetApiBiDataStructByIdError = unknown;

export type DeleteApiBiDataStructByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiBiDataStructByIdResponse = (SuccessResult);

export type DeleteApiBiDataStructByIdError = unknown;

export type PutApiBiDataStructByIdData = {
    body: UpdateBiDataStructDto;
    path: {
        id: unknown;
    };
};

export type PutApiBiDataStructByIdResponse = (SuccessResult);

export type PutApiBiDataStructByIdError = unknown;

export type GetApiBiDataMetaByMetaIdRuleData = {
    path: {
        id: unknown;
    };
};

export type GetApiBiDataMetaByMetaIdRuleResponse = (BiDataRuleGetResponse);

export type GetApiBiDataMetaByMetaIdRuleError = unknown;

export type PostApiBiDataMetaByMetaIdRuleData = {
    body: CreateBiDataRuleDto;
    path: {
        metaId: string;
    };
};

export type PostApiBiDataMetaByMetaIdRuleResponse = (SuccessResult);

export type PostApiBiDataMetaByMetaIdRuleError = unknown;

export type PutApiBiDataRuleByIdData = {
    body: UpdateBiDataRuleDto;
    path: {
        id: unknown;
    };
};

export type PutApiBiDataRuleByIdResponse = (SuccessResult);

export type PutApiBiDataRuleByIdError = unknown;

export type PostApiChatContactsData = {
    body: ChatContactsCreateDto;
};

export type PostApiChatContactsResponse = (SuccessResult);

export type PostApiChatContactsError = unknown;

export type GetApiChatContactsResponse = (ChatContactsGetResponse);

export type GetApiChatContactsError = unknown;

export type DeleteApiChatContactsByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiChatContactsByIdResponse = (SuccessResult);

export type DeleteApiChatContactsByIdError = unknown;

export type PutApiChatContactsByIdData = {
    body: ChatContactsUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiChatContactsByIdResponse = (SuccessResult);

export type PutApiChatContactsByIdError = unknown;

export type PostApiChatMessageData = {
    body: ChatMessageCreateDto;
};

export type PostApiChatMessageResponse = (SuccessResult);

export type PostApiChatMessageError = unknown;

export type GetApiChatMessageCursorData = {
    query: {
        contactsId: string;
        direction: 'forward' | 'backward';
        fromId?: string;
    };
};

export type GetApiChatMessageCursorResponse = (ChatMessageGetResponse);

export type GetApiChatMessageCursorError = unknown;

export type PostApiChatSessionData = {
    body: ChatSessionCreateDto;
};

export type PostApiChatSessionResponse = (ChatSessionCreateResponse);

export type PostApiChatSessionError = unknown;

export type GetApiChatSessionResponse = (ChatSessionGetResponse);

export type GetApiChatSessionError = unknown;

export type DeleteApiChatSessionByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiChatSessionByIdResponse = (SuccessResult);

export type DeleteApiChatSessionByIdError = unknown;

export type PostApiWeixinPlatformPayCenterNotifyCommonPayByAppidByMchidResponse = (unknown);

export type PostApiWeixinPlatformPayCenterNotifyCommonPayByAppidByMchidError = unknown;

export type PostApiWeixinPlatformPayCenterNotifyNativePayByAppidByMchidResponse = (unknown);

export type PostApiWeixinPlatformPayCenterNotifyNativePayByAppidByMchidError = unknown;

export type PostApiWeixinPlatformPayCenterNotifyRefundByAppidByMchidResponse = (unknown);

export type PostApiWeixinPlatformPayCenterNotifyRefundByAppidByMchidError = unknown;

export type PostApiAiSessionData = {
    body: CreateAiSessionDto;
};

export type PostApiAiSessionResponse = (unknown);

export type PostApiAiSessionError = unknown;

export type GetApiAiSessionResponse = (unknown);

export type GetApiAiSessionError = unknown;

export type GetApiAiSessionByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAiSessionByIdResponse = (unknown);

export type GetApiAiSessionByIdError = unknown;

export type PatchApiAiSessionByIdData = {
    body: UpdateAiSessionDto;
    path: {
        id: string;
    };
};

export type PatchApiAiSessionByIdResponse = (unknown);

export type PatchApiAiSessionByIdError = unknown;

export type DeleteApiAiSessionByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAiSessionByIdResponse = (unknown);

export type DeleteApiAiSessionByIdError = unknown;

export type PostApiBiChartMetaData = {
    body: CreateBiChartMetaDto;
};

export type PostApiBiChartMetaResponse = (unknown);

export type PostApiBiChartMetaError = unknown;

export type GetApiBiChartMetaResponse = (unknown);

export type GetApiBiChartMetaError = unknown;

export type GetApiBiChartMetaByIdData = {
    path: {
        id: string;
    };
};

export type GetApiBiChartMetaByIdResponse = (unknown);

export type GetApiBiChartMetaByIdError = unknown;

export type PatchApiBiChartMetaByIdData = {
    body: UpdateBiChartMetaDto;
    path: {
        id: string;
    };
};

export type PatchApiBiChartMetaByIdResponse = (unknown);

export type PatchApiBiChartMetaByIdError = unknown;

export type DeleteApiBiChartMetaByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiBiChartMetaByIdResponse = (unknown);

export type DeleteApiBiChartMetaByIdError = unknown;

export type PostApiBiViewMetaData = {
    body: CreateBiViewMetaDto;
};

export type PostApiBiViewMetaResponse = (unknown);

export type PostApiBiViewMetaError = unknown;

export type GetApiBiViewMetaResponse = (unknown);

export type GetApiBiViewMetaError = unknown;

export type GetApiBiViewMetaByIdData = {
    path: {
        id: string;
    };
};

export type GetApiBiViewMetaByIdResponse = (unknown);

export type GetApiBiViewMetaByIdError = unknown;

export type PatchApiBiViewMetaByIdData = {
    body: UpdateBiViewMetaDto;
    path: {
        id: string;
    };
};

export type PatchApiBiViewMetaByIdResponse = (unknown);

export type PatchApiBiViewMetaByIdError = unknown;

export type DeleteApiBiViewMetaByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiBiViewMetaByIdResponse = (unknown);

export type DeleteApiBiViewMetaByIdError = unknown;

export type PostApiFileUploadData = {
    body: FileUploadDto;
};

export type PostApiFileUploadResponse = (FileUploadResponse);

export type PostApiFileUploadError = unknown;

export type PostApiFileUploadsData = {
    body: FilesUploadDto;
};

export type PostApiFileUploadsResponse = (unknown);

export type PostApiFileUploadsError = unknown;

export type GetApiFileByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiFileByIdResponse = (FileGetResponse);

export type GetApiFileByIdError = unknown;

export type GetApiFileStaticByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiFileStaticByIdResponse = ((Blob | File));

export type GetApiFileStaticByIdError = unknown;

export type PostApiForumCommentData = {
    body: ForumCommentCreateDto;
};

export type PostApiForumCommentResponse = (SuccessResult);

export type PostApiForumCommentError = unknown;

export type GetApiForumCommentData = {
    query: {
        postId: unknown;
    };
};

export type GetApiForumCommentResponse = (ForumCommentGetAllResponse);

export type GetApiForumCommentError = unknown;

export type DeleteApiForumCommentByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiForumCommentByIdResponse = (SuccessResult);

export type DeleteApiForumCommentByIdError = unknown;

export type GetApiForumCommentByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiForumCommentByIdResponse = (ForumCommentGetResponse);

export type GetApiForumCommentByIdError = unknown;

export type GetApiForumCommentPageAllData = {
    query: {
        content?: string;
        pageNo: number;
        pageSize: number;
        postId?: string;
    };
};

export type GetApiForumCommentPageAllResponse = (ForumCommentPaginateResponse);

export type GetApiForumCommentPageAllError = unknown;

export type GetApiForumCommentPageSessionData = {
    query: {
        content?: string;
        pageNo: number;
        pageSize: number;
        postId?: string;
    };
};

export type GetApiForumCommentPageSessionResponse = (ForumCommentPaginateResponse);

export type GetApiForumCommentPageSessionError = unknown;

export type GetApiForumCommentCountAllData = {
    query: {
        postId: unknown;
    };
};

export type GetApiForumCommentCountAllResponse = (ForumCommentGetCountResponse);

export type GetApiForumCommentCountAllError = unknown;

export type GetApiForumCommentCountSessionData = {
    query: {
        postId: unknown;
    };
};

export type GetApiForumCommentCountSessionResponse = (ForumCommentGetCountResponse);

export type GetApiForumCommentCountSessionError = unknown;

export type PostApiForumPostData = {
    body: ForumPostCreateDto;
};

export type PostApiForumPostResponse = (SuccessResult);

export type PostApiForumPostError = unknown;

export type GetApiForumPostData = {
    query: {
        sectionId: unknown;
    };
};

export type GetApiForumPostResponse = (ForumPostGetAllResponse);

export type GetApiForumPostError = unknown;

export type DeleteApiForumPostByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiForumPostByIdResponse = (SuccessResult);

export type DeleteApiForumPostByIdError = unknown;

export type PutApiForumPostByIdData = {
    body: ForumPostUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiForumPostByIdResponse = (SuccessResult);

export type PutApiForumPostByIdError = unknown;

export type GetApiForumPostByIdData = {
    path: {
        id: unknown;
    };
    query?: {
        relationCollects?: boolean;
        relationComments?: boolean;
        relationSection?: boolean;
        relationZans?: boolean;
    };
};

export type GetApiForumPostByIdResponse = (ForumPostGetResponse);

export type GetApiForumPostByIdError = unknown;

export type GetApiForumPostPageAllData = {
    query: {
        pageNo: number;
        pageSize: number;
        relationCollects?: boolean;
        relationComments?: boolean;
        relationSection?: boolean;
        relationZans?: boolean;
        sectionId?: string;
        title?: string;
    };
};

export type GetApiForumPostPageAllResponse = (ForumPostPaginateResponse);

export type GetApiForumPostPageAllError = unknown;

export type GetApiForumPostPageSessionData = {
    query: {
        pageNo: number;
        pageSize: number;
        relationCollects?: boolean;
        relationComments?: boolean;
        relationSection?: boolean;
        relationZans?: boolean;
        sectionId?: string;
        title?: string;
    };
};

export type GetApiForumPostPageSessionResponse = (ForumPostPaginateResponse);

export type GetApiForumPostPageSessionError = unknown;

export type GetApiForumPostPageCursorAllData = {
    query: {
        pageSize: number;
        relationCollects?: boolean;
        relationComments?: boolean;
        relationSection?: boolean;
        relationZans?: boolean;
        sectionId?: string;
        versionId?: string;
    };
};

export type GetApiForumPostPageCursorAllResponse = (ForumPostPaginateResponse);

export type GetApiForumPostPageCursorAllError = unknown;

export type GetApiForumPostCountAllData = {
    query?: {
        sectionId?: string;
    };
};

export type GetApiForumPostCountAllResponse = (ForumPostGetCountResponse);

export type GetApiForumPostCountAllError = unknown;

export type GetApiForumPostCountSessionData = {
    query?: {
        sectionId?: string;
    };
};

export type GetApiForumPostCountSessionResponse = (ForumPostGetCountResponse);

export type GetApiForumPostCountSessionError = unknown;

export type PostApiForumPostRelationData = {
    body: ForumPostRelationCreateDto;
};

export type PostApiForumPostRelationResponse = (SuccessResult);

export type PostApiForumPostRelationError = unknown;

export type GetApiForumPostRelationData = {
    query?: {
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationResponse = (ForumPostRelationGetAllResponse);

export type GetApiForumPostRelationError = unknown;

export type DeleteApiForumPostRelationByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiForumPostRelationByIdResponse = (SuccessResult);

export type DeleteApiForumPostRelationByIdError = unknown;

export type GetApiForumPostRelationByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiForumPostRelationByIdResponse = (SuccessResult);

export type GetApiForumPostRelationByIdError = unknown;

export type GetApiForumPostRelationSessionInfoData = {
    query?: {
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationSessionInfoResponse = (ForumPostRelationGetAllResponse);

export type GetApiForumPostRelationSessionInfoError = unknown;

export type GetApiForumPostRelationPageAllData = {
    query: {
        pageNo: number;
        pageSize: number;
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationPageAllResponse = (ForumPostRelationPaginateResponse);

export type GetApiForumPostRelationPageAllError = unknown;

export type GetApiForumPostRelationPageSessionData = {
    query: {
        pageNo: number;
        pageSize: number;
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationPageSessionResponse = (ForumPostRelationPaginateResponse);

export type GetApiForumPostRelationPageSessionError = unknown;

export type GetApiForumPostRelationCountAllData = {
    query?: {
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationCountAllResponse = (ForumPostRelationGetCountResponse);

export type GetApiForumPostRelationCountAllError = unknown;

export type GetApiForumPostRelationCountSessionData = {
    query?: {
        postId?: string;
        type?: 'unknown' | 'zan' | 'collect';
    };
};

export type GetApiForumPostRelationCountSessionResponse = (ForumPostRelationGetCountResponse);

export type GetApiForumPostRelationCountSessionError = unknown;

export type GetApiForumSectionResponse = (ForumSectionGetAllResponse);

export type GetApiForumSectionError = unknown;

export type PostApiForumSectionData = {
    body: ForumSectionCreateDto;
};

export type PostApiForumSectionResponse = (SuccessResult);

export type PostApiForumSectionError = unknown;

export type GetApiForumSectionByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiForumSectionByIdResponse = (ForumSectionGetResponse);

export type GetApiForumSectionByIdError = unknown;

export type DeleteApiForumSectionByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiForumSectionByIdResponse = (SuccessResult);

export type DeleteApiForumSectionByIdError = unknown;

export type PutApiForumSectionByIdData = {
    body: ForumSectionUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiForumSectionByIdResponse = (SuccessResult);

export type PutApiForumSectionByIdError = unknown;

export type GetApiForumSectionPageAllData = {
    query: {
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiForumSectionPageAllResponse = (ForumSectionPaginateResponse);

export type GetApiForumSectionPageAllError = unknown;

export type GetApiForumSectionPageSessionData = {
    query: {
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiForumSectionPageSessionResponse = (ForumSectionPaginateResponse);

export type GetApiForumSectionPageSessionError = unknown;

export type PostApiFsData = {
    body: CreateFDto;
};

export type PostApiFsResponse = (InsertSuccessResult);

export type PostApiFsError = unknown;

export type GetApiFsData = {
    query?: {
        favorite?: string;
    };
};

export type GetApiFsResponse = (FGetAllResponse);

export type GetApiFsError = unknown;

export type GetApiFsChildrenByIdData = {
    path: {
        id: string;
    };
};

export type GetApiFsChildrenByIdResponse = (FGetAllResponse);

export type GetApiFsChildrenByIdError = unknown;

export type GetApiFsByIdData = {
    path: {
        id: string;
    };
};

export type GetApiFsByIdResponse = (FGetResponse);

export type GetApiFsByIdError = unknown;

export type PatchApiFsByIdData = {
    body: UpdateFDto;
    path: {
        id: string;
    };
};

export type PatchApiFsByIdResponse = (UpdateSuccessResult);

export type PatchApiFsByIdError = unknown;

export type DeleteApiFsByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiFsByIdResponse = (DeleteSuccessResult);

export type DeleteApiFsByIdError = unknown;

export type PostApiInitializationCreateSuperAdminData = {
    body: CreateSuperAdminDto;
};

export type PostApiInitializationCreateSuperAdminResponse = (InsertSuccessResult);

export type PostApiInitializationCreateSuperAdminError = unknown;

export type PostApiMallCartData = {
    body: MallCartCreateDto;
};

export type PostApiMallCartResponse = (SuccessResult);

export type PostApiMallCartError = unknown;

export type GetApiMallCartResponse = (MallCartGetAllResponse);

export type GetApiMallCartError = unknown;

export type DeleteApiMallCartByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallCartByIdResponse = (SuccessResult);

export type DeleteApiMallCartByIdError = unknown;

export type PutApiMallCartByIdData = {
    body: MallCartUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiMallCartByIdResponse = (SuccessResult);

export type PutApiMallCartByIdError = unknown;

export type PutApiMallCartBatchData = {
    body: MallCartBatchUpdateDto;
};

export type PutApiMallCartBatchResponse = (SuccessResult);

export type PutApiMallCartBatchError = unknown;

export type PostApiMallGoodData = {
    body: MallGoodCreateDto;
};

export type PostApiMallGoodResponse = (SuccessResult);

export type PostApiMallGoodError = unknown;

export type GetApiMallGoodData = {
    query: {
        shopId: string;
    };
};

export type GetApiMallGoodResponse = (MallGoodGetAllResponse);

export type GetApiMallGoodError = unknown;

export type DeleteApiMallGoodByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallGoodByIdResponse = (SuccessResult);

export type DeleteApiMallGoodByIdError = unknown;

export type PutApiMallGoodByIdData = {
    body: MallGoodUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiMallGoodByIdResponse = (SuccessResult);

export type PutApiMallGoodByIdError = unknown;

export type GetApiMallGoodByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiMallGoodByIdResponse = (MallGoodGetResponse);

export type GetApiMallGoodByIdError = unknown;

export type GetApiMallGoodPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
        shopId?: string;
        title?: string;
    };
};

export type GetApiMallGoodPaginateResponse = (MallGoodPaginateResponse);

export type GetApiMallGoodPaginateError = unknown;

export type PostApiMallGoodCommentData = {
    body: MallGoodCommentCreateDto;
};

export type PostApiMallGoodCommentResponse = (SuccessResult);

export type PostApiMallGoodCommentError = unknown;

export type DeleteApiMallGoodCommentByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallGoodCommentByIdResponse = (SuccessResult);

export type DeleteApiMallGoodCommentByIdError = unknown;

export type GetApiMallGoodCommentPageByCursorData = {
    query: {
        afterId: string;
        count: number;
        goodId: string;
    };
};

export type GetApiMallGoodCommentPageByCursorResponse = (MallGoodCommentPaginateWidthCursorResponse);

export type GetApiMallGoodCommentPageByCursorError = unknown;

export type GetApiMallGoodCommentPageData = {
    query: {
        goodId: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiMallGoodCommentPageResponse = (MallGoodCommentPaginateResponse);

export type GetApiMallGoodCommentPageError = unknown;

export type PostApiMallGoodGroupData = {
    body: MallGoodGroupCreateDto;
};

export type PostApiMallGoodGroupResponse = (SuccessResult);

export type PostApiMallGoodGroupError = unknown;

export type GetApiMallGoodGroupResponse = (MallGoodGroupGetAllResponse);

export type GetApiMallGoodGroupError = unknown;

export type DeleteApiMallGoodGroupByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallGoodGroupByIdResponse = (SuccessResult);

export type DeleteApiMallGoodGroupByIdError = unknown;

export type PutApiMallGoodGroupByIdData = {
    body: MallGoodGroupUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiMallGoodGroupByIdResponse = (SuccessResult);

export type PutApiMallGoodGroupByIdError = unknown;

export type GetApiMallGoodGroupByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiMallGoodGroupByIdResponse = (MallGoodGroupGetResponse);

export type GetApiMallGoodGroupByIdError = unknown;

export type GetApiMallGoodGroupTreeResponse = (MallGoodGroupGetTreeResponse);

export type GetApiMallGoodGroupTreeError = unknown;

export type PostApiMallGoodRelationData = {
    body: MallGoodRelationCreateDto;
};

export type PostApiMallGoodRelationResponse = (SuccessResult);

export type PostApiMallGoodRelationError = unknown;

export type DeleteApiMallGoodRelationByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallGoodRelationByIdResponse = (SuccessResult);

export type DeleteApiMallGoodRelationByIdError = unknown;

export type GetApiMallGoodRelationItemData = {
    query: {
        goodId: string;
        type: unknown;
        userId: string;
    };
};

export type GetApiMallGoodRelationItemResponse = (MallGoodRelationGetResponse);

export type GetApiMallGoodRelationItemError = unknown;

export type PostApiMallGoodTagData = {
    body: MallGoodTagCreateDto;
};

export type PostApiMallGoodTagResponse = (SuccessResult);

export type PostApiMallGoodTagError = unknown;

export type GetApiMallGoodTagResponse = (MallGoodTabGetAllResponse);

export type GetApiMallGoodTagError = unknown;

export type DeleteApiMallGoodTagByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallGoodTagByIdResponse = (SuccessResult);

export type DeleteApiMallGoodTagByIdError = unknown;

export type PutApiMallGoodTagByIdData = {
    body: MallGoodTagUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiMallGoodTagByIdResponse = (SuccessResult);

export type PutApiMallGoodTagByIdError = unknown;

export type GetApiMallGoodTagByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiMallGoodTagByIdResponse = (MallGoodTagGetResponse);

export type GetApiMallGoodTagByIdError = unknown;

export type GetApiMallGoodTagPageData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiMallGoodTagPageResponse = (MallGoodTagPaginateResponse);

export type GetApiMallGoodTagPageError = unknown;

export type PostApiMallOrderData = {
    body: MallOrderCreateDto;
};

export type PostApiMallOrderResponse = (SuccessResult);

export type PostApiMallOrderError = unknown;

export type GetApiMallOrderPageByCursorSessionData = {
    query: {
        afterId: string;
        count: number;
    };
};

export type GetApiMallOrderPageByCursorSessionResponse = (MallOrderPageWidthCursorResponse);

export type GetApiMallOrderPageByCursorSessionError = unknown;

export type GetApiMallOrderPageData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiMallOrderPageResponse = (MallOrderPaginateResponse);

export type GetApiMallOrderPageError = unknown;

export type GetApiMallOrderByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiMallOrderByIdResponse = (MallOrderGetResponse);

export type GetApiMallOrderByIdError = unknown;

export type PostApiMallShopData = {
    body: MallShopCreateDto;
};

export type PostApiMallShopResponse = (SuccessResult);

export type PostApiMallShopError = unknown;

export type GetApiMallShopResponse = (MallShopGetAllResponse);

export type GetApiMallShopError = unknown;

export type DeleteApiMallShopByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiMallShopByIdResponse = (SuccessResult);

export type DeleteApiMallShopByIdError = unknown;

export type PutApiMallShopByIdData = {
    body: MallShopUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiMallShopByIdResponse = (SuccessResult);

export type PutApiMallShopByIdError = unknown;

export type GetApiMallShopByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiMallShopByIdResponse = (MallShopGetResponse);

export type GetApiMallShopByIdError = unknown;

export type GetApiMallShopPaginateData = {
    query: {
        name: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiMallShopPaginateResponse = (MallShopPaginateResponse);

export type GetApiMallShopPaginateError = unknown;

export type GetApiResourcesResponse = (ResourceGetAllSuccessResult);

export type GetApiResourcesError = unknown;

export type PostApiResourcesData = {
    body: CreateResourceDto;
};

export type PostApiResourcesResponse = (InsertSuccessResult);

export type PostApiResourcesError = unknown;

export type GetApiResourcesPageData = {
    query: {
        /**
         * 资源名
         */
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiResourcesPageResponse = (ResourcePaginateSuccessResult);

export type GetApiResourcesPageError = unknown;

export type GetApiResourcesByIdData = {
    path: {
        /**
         * 资源id
         */
        id: unknown;
    };
};

export type GetApiResourcesByIdResponse = (ResourceGetSuccessResult);

export type GetApiResourcesByIdError = unknown;

export type DeleteApiResourcesByIdData = {
    path: {
        /**
         * 资源id
         */
        id: unknown;
    };
};

export type DeleteApiResourcesByIdResponse = (DeleteSuccessResult);

export type DeleteApiResourcesByIdError = unknown;

export type PutApiResourcesByIdData = {
    body: UpdateResourceDto;
    path: {
        /**
         * 资源id
         */
        id: unknown;
    };
};

export type PutApiResourcesByIdResponse = (UpdateSuccessResult);

export type PutApiResourcesByIdError = unknown;

export type GetApiRolesResponse = (RoleGetAllSuccessResponse);

export type GetApiRolesError = unknown;

export type PostApiRolesData = {
    body: CreateRolesDto;
};

export type PostApiRolesResponse = (InsertSuccessResult);

export type PostApiRolesError = unknown;

export type GetApiRolesPageData = {
    query: {
        /**
         * 角色名
         */
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiRolesPageResponse = (RolesPaginateSuccessResponse);

export type GetApiRolesPageError = unknown;

export type DeleteApiRolesByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiRolesByIdResponse = (DeleteSuccessResult);

export type DeleteApiRolesByIdError = unknown;

export type GetApiRolesByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiRolesByIdResponse = (RoleGetSuccessResponse);

export type GetApiRolesByIdError = unknown;

export type PutApiRolesByIdData = {
    body: UpdateRoleDto;
    path: {
        id: unknown;
    };
};

export type PutApiRolesByIdResponse = (UpdateSuccessResult);

export type PutApiRolesByIdError = unknown;

export type GetApiSessionUserResponse = (SessionGetUserResponse);

export type GetApiSessionUserError = unknown;

export type GetApiSessionResourcesResponse = (unknown);

export type GetApiSessionResourcesError = unknown;

export type GetApiSettingByKeysData = {
    path: {
        keys: unknown;
    };
};

export type GetApiSettingByKeysResponse = (SettingGetItemsSuccessResponse);

export type GetApiSettingByKeysError = unknown;

export type PostApiSettingData = {
    body: SettingSetDto;
};

export type PostApiSettingResponse = (SuccessResult);

export type PostApiSettingError = unknown;

export type PostApiSmsTestData = {
    body: SmsTestDto;
};

export type PostApiSmsTestResponse = (unknown);

export type PostApiSmsTestError = unknown;

export type PostApiSmsByTypeByPhoneData = {
    path: {
        phone: unknown;
        type: 'login' | 'bind-mobile';
    };
};

export type PostApiSmsByTypeByPhoneResponse = (unknown);

export type PostApiSmsByTypeByPhoneError = unknown;

export type GetApiUsersResponse = (UserGetAllSuccessResponse);

export type GetApiUsersError = unknown;

export type PostApiUsersData = {
    body: CreateUsersDto;
};

export type PostApiUsersResponse = (InsertSuccessResult);

export type PostApiUsersError = unknown;

export type GetApiUsersPageData = {
    query: {
        /**
         * 是否活跃
         */
        isActive?: string;
        pageNo: number;
        pageSize: number;
        /**
         * 用户名
         */
        username?: string;
    };
};

export type GetApiUsersPageResponse = (UsersPaginateSuccessResponse);

export type GetApiUsersPageError = unknown;

export type DeleteApiUsersByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiUsersByIdResponse = (DeleteSuccessResult);

export type DeleteApiUsersByIdError = unknown;

export type GetApiUsersByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiUsersByIdResponse = (UserGetSuccessResponse);

export type GetApiUsersByIdError = unknown;

export type PutApiUsersByIdData = {
    body: UserUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiUsersByIdResponse = (UpdateSuccessResult);

export type PutApiUsersByIdError = unknown;

export type DeleteApiUsersSessionResponse = (SuccessResult);

export type DeleteApiUsersSessionError = unknown;

export type PostApiUsersBindWeixinSessionData = {
    body: UsersBindWeixinDto;
};

export type PostApiUsersBindWeixinSessionResponse = (SuccessResult);

export type PostApiUsersBindWeixinSessionError = unknown;

export type PostApiUsersBindMobileSessionData = {
    body: UsersBindMobileDto;
};

export type PostApiUsersBindMobileSessionResponse = (SuccessResult);

export type PostApiUsersBindMobileSessionError = unknown;

export type PostApiUsersBindMpMobileSessionData = {
    body: UsersBindWeixinDto;
};

export type PostApiUsersBindMpMobileSessionResponse = (SuccessResult);

export type PostApiUsersBindMpMobileSessionError = unknown;

export type PostApiUsersBindUsernameSessionData = {
    body: UsersBindUsernameDto;
};

export type PostApiUsersBindUsernameSessionResponse = (SuccessResult);

export type PostApiUsersBindUsernameSessionError = unknown;

export type GetApiWeixinData = {
    query: {
        type: 'app' | 'mp' | 'web' | 'official_account';
    };
};

export type GetApiWeixinResponse = (WeixinGetAllResponse);

export type GetApiWeixinError = unknown;

export type PostApiWeixinData = {
    body: WeixinCreateDto;
};

export type PostApiWeixinResponse = (SuccessResult);

export type PostApiWeixinError = unknown;

export type GetApiWeixinPageData = {
    query: {
        /**
         * 应用名称
         */
        name?: string;
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiWeixinPageResponse = (WeixinPaginateSuccessResponse);

export type GetApiWeixinPageError = unknown;

export type DeleteApiWeixinByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiWeixinByIdResponse = (SuccessResult);

export type DeleteApiWeixinByIdError = unknown;

export type GetApiWeixinByIdData = {
    path: {
        id: string;
    };
};

export type GetApiWeixinByIdResponse = (WeixinGetSuccessResponse);

export type GetApiWeixinByIdError = unknown;

export type PutApiWeixinByIdData = {
    body: WeixinUpdateDto;
    path: {
        id: string;
    };
};

export type PutApiWeixinByIdResponse = (SuccessResult);

export type PutApiWeixinByIdError = unknown;

export type GetApiWeixinPlatformMiniProgramGetPhoneNumberByAppidData = {
    path: {
        appid: unknown;
    };
    query: {
        code: unknown;
    };
};

export type GetApiWeixinPlatformMiniProgramGetPhoneNumberByAppidResponse = (GetPhoneNumberResponse);

export type GetApiWeixinPlatformMiniProgramGetPhoneNumberByAppidError = unknown;

export type GetApiWeixinPlatformMiniProgramCode2SessionByAppidData = {
    path: {
        appid: unknown;
    };
    query: {
        code: unknown;
    };
};

export type GetApiWeixinPlatformMiniProgramCode2SessionByAppidResponse = (WeixinMiniProgramCodeToSessionResponse);

export type GetApiWeixinPlatformMiniProgramCode2SessionByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountGetAccessTokenByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountGetAccessTokenByAppidResponse = (WeixinOfficialAccountGetAccessTokenResponse);

export type GetApiWeixinPlatformOfficialAccountGetAccessTokenByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountGetNotifyUrlByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountGetNotifyUrlByAppidResponse = (WeixinOfficialAccountGetNotifyUrlResponse);

export type GetApiWeixinPlatformOfficialAccountGetNotifyUrlByAppidError = unknown;

export type PostApiWeixinPlatformOfficialAccountJssdkGetSignatureByAppidData = {
    body: GetJssdkSignatureDto;
    path: {
        appid: unknown;
    };
};

export type PostApiWeixinPlatformOfficialAccountJssdkGetSignatureByAppidResponse = (unknown);

export type PostApiWeixinPlatformOfficialAccountJssdkGetSignatureByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountTemplatesByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountTemplatesByAppidResponse = (unknown);

export type GetApiWeixinPlatformOfficialAccountTemplatesByAppidError = unknown;

export type DeleteApiWeixinPlatformOfficialAccountTemplatesByIdByAppidData = {
    path: {
        appid: unknown;
        id: unknown;
    };
};

export type DeleteApiWeixinPlatformOfficialAccountTemplatesByIdByAppidResponse = (DeleteSuccessResult);

export type DeleteApiWeixinPlatformOfficialAccountTemplatesByIdByAppidError = unknown;

export type PostApiWeixinPlatformOfficialAccountSendByAppidData = {
    body: SendTemplateDto;
    path: {
        appid: unknown;
    };
};

export type PostApiWeixinPlatformOfficialAccountSendByAppidResponse = (unknown);

export type PostApiWeixinPlatformOfficialAccountSendByAppidError = unknown;

export type PostApiWeixinPlatformPayCenterPayParamsByAppidByMchidData = {
    body: WeixinPayCenterGetPayParamsDto;
    path: {
        appid: unknown;
        mchid: unknown;
    };
};

export type PostApiWeixinPlatformPayCenterPayParamsByAppidByMchidResponse = (WeixinPayCenterGetPayParamsResponse);

export type PostApiWeixinPlatformPayCenterPayParamsByAppidByMchidError = unknown;

export type GetApiWeixinOfficialAccountConfigWeixinByWeixinIdData = {
    path: {
        weixinId: string;
    };
};

export type GetApiWeixinOfficialAccountConfigWeixinByWeixinIdResponse = (WeixinOfficialAccountConfigGetByWeixinSuccessResponse);

export type GetApiWeixinOfficialAccountConfigWeixinByWeixinIdError = unknown;

export type PutApiWeixinOfficialAccountConfigByIdData = {
    body: WeixinOfficialAccountConfigUpdateDto;
    path: {
        id: string;
    };
};

export type PutApiWeixinOfficialAccountConfigByIdResponse = (SuccessResult);

export type PutApiWeixinOfficialAccountConfigByIdError = unknown;

export type PostApiWeixinPlatformOfficialAccountNotifyByAppidData = {
    path: {
        appid: unknown;
    };
};

export type PostApiWeixinPlatformOfficialAccountNotifyByAppidResponse = (unknown);

export type PostApiWeixinPlatformOfficialAccountNotifyByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountNotifyByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountNotifyByAppidResponse = (unknown);

export type GetApiWeixinPlatformOfficialAccountNotifyByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpInfoByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpInfoByAppidResponse = (unknown);

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpInfoByAppidError = unknown;

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpBaseByAppidData = {
    path: {
        appid: unknown;
    };
};

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpBaseByAppidResponse = (unknown);

export type GetApiWeixinPlatformOfficialAccountOauthOauthJumpBaseByAppidError = unknown;

export type PostApiWeixinPayData = {
    body: WeixinPayCreateDto;
};

export type PostApiWeixinPayResponse = (SuccessResult);

export type PostApiWeixinPayError = unknown;

export type GetApiWeixinPayResponse = (WeixinPayGetResponse);

export type GetApiWeixinPayError = unknown;

export type DeleteApiWeixinPayByIdData = {
    path: {
        id: unknown;
    };
};

export type DeleteApiWeixinPayByIdResponse = (SuccessResult);

export type DeleteApiWeixinPayByIdError = unknown;

export type PutApiWeixinPayByIdData = {
    body: WeixinPayUpdateDto;
    path: {
        id: unknown;
    };
};

export type PutApiWeixinPayByIdResponse = (SuccessResult);

export type PutApiWeixinPayByIdError = unknown;

export type GetApiWeixinPayByIdData = {
    path: {
        id: unknown;
    };
};

export type GetApiWeixinPayByIdResponse = (WeixinPayGetResponse);

export type GetApiWeixinPayByIdError = unknown;

export type GetApiWeixinPayPageData = {
    query: {
        pageNo: number;
        pageSize: number;
    };
};

export type GetApiWeixinPayPageResponse = (WeixinPayPaginateResponse);

export type GetApiWeixinPayPageError = unknown;

export type GetApiWeixinPlatformUserPaginateData = {
    query: {
        pageNo: number;
        pageSize: number;
        weixinId: string;
    };
};

export type GetApiWeixinPlatformUserPaginateResponse = (WeixinPlatformUserPaginateResponse);

export type GetApiWeixinPlatformUserPaginateError = unknown;

export type $OpenApiTs = {
    '/api/address/create/session': {
        post: {
            req: PostApiAddressCreateSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/address/getAll/session': {
        get: {
            res: {
                '200': AddressGetAllSessionResponse;
            };
        };
    };
    '/api/address/{id}/session': {
        delete: {
            req: DeleteApiAddressByIdSessionData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiAddressByIdSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/address/{id}': {
        get: {
            req: GetApiAddressByIdData;
            res: {
                '200': AddressGetResponse;
            };
        };
    };
    '/api/ai/aliyun/account': {
        post: {
            req: PostApiAiAliyunAccountData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiAliyunAccountGetAllResponse;
            };
        };
    };
    '/api/ai/aliyun/account/paginate': {
        get: {
            req: GetApiAiAliyunAccountPaginateData;
            res: {
                '200': AiAliyunAccountPaginateResponse;
            };
        };
    };
    '/api/ai/aliyun/account/{id}': {
        get: {
            req: GetApiAiAliyunAccountByIdData;
            res: {
                '200': AiAliyunAccountGetResponse;
            };
        };
        patch: {
            req: PatchApiAiAliyunAccountByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiAliyunAccountByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/aliyun/message': {
        post: {
            req: PostApiAiAliyunMessageData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            req: GetApiAiAliyunMessageData;
            res: {
                '200': AiAliyunAccountGetHistoryResponse;
            };
        };
    };
    '/api/ai/aliyun/ocr': {
        post: {
            req: PostApiAiAliyunOcrData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiAliyunOcrGetAllResponse;
            };
        };
    };
    '/api/ai/aliyun/ocr/paginate': {
        get: {
            req: GetApiAiAliyunOcrPaginateData;
            res: {
                '200': AiAliyunOcrPaginateResponse;
            };
        };
    };
    '/api/ai/aliyun/ocr/{id}': {
        get: {
            req: GetApiAiAliyunOcrByIdData;
            res: {
                '200': AiAliyunOcrGetResponse;
            };
        };
        put: {
            req: PutApiAiAliyunOcrByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
    };
    '/api/ai/aliyun/service': {
        post: {
            req: PostApiAiAliyunServiceData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiAliyunServiceGetAllResponse;
            };
        };
    };
    '/api/ai/aliyun/service/paginate': {
        get: {
            req: GetApiAiAliyunServicePaginateData;
            res: {
                '200': AiAliyunServicePaginateResponse;
            };
        };
    };
    '/api/ai/aliyun/service/{id}': {
        get: {
            req: GetApiAiAliyunServiceByIdData;
            res: {
                '200': AiAliyunServiceGetResponse;
            };
        };
        patch: {
            req: PatchApiAiAliyunServiceByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiAliyunServiceByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/aliyun/session': {
        post: {
            req: PostApiAiAliyunSessionData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiAliyunSessionGetAllResponse;
            };
        };
    };
    '/api/ai/aliyun/session/paginate': {
        get: {
            req: GetApiAiAliyunSessionPaginateData;
            res: {
                '200': AiAliyunSessionPaginateResponse;
            };
        };
    };
    '/api/ai/aliyun/session/{id}': {
        get: {
            req: GetApiAiAliyunSessionByIdData;
            res: {
                '200': AiAliyunSessionGetResponse;
            };
        };
        patch: {
            req: PatchApiAiAliyunSessionByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiAliyunSessionByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/baidu/account': {
        post: {
            req: PostApiAiBaiduAccountData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiBaiduAccountGetAllResponse;
            };
        };
    };
    '/api/ai/baidu/account/paginate': {
        get: {
            req: GetApiAiBaiduAccountPaginateData;
            res: {
                '200': AiBaiduAccountPaginateResponse;
            };
        };
    };
    '/api/ai/baidu/account/{id}': {
        get: {
            req: GetApiAiBaiduAccountByIdData;
            res: {
                '200': AiBaiduAccountGetResponse;
            };
        };
        patch: {
            req: PatchApiAiBaiduAccountByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiBaiduAccountByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/baidu/message': {
        post: {
            req: PostApiAiBaiduMessageData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            req: GetApiAiBaiduMessageData;
            res: {
                '200': AiBaiduAccountGetHistoryResponse;
            };
        };
    };
    '/api/ai/baidu/ocr': {
        post: {
            req: PostApiAiBaiduOcrData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiBaiduOcrGetAllResponse;
            };
        };
    };
    '/api/ai/baidu/ocr/paginate': {
        get: {
            req: GetApiAiBaiduOcrPaginateData;
            res: {
                '200': AiBaiduOcrPaginateResponse;
            };
        };
    };
    '/api/ai/baidu/ocr/{id}': {
        get: {
            req: GetApiAiBaiduOcrByIdData;
            res: {
                '200': AiBaiduOcrGetResponse;
            };
        };
    };
    '/api/ai/baidu/service': {
        post: {
            req: PostApiAiBaiduServiceData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiBaiduServiceGetAllResponse;
            };
        };
    };
    '/api/ai/baidu/service/paginate': {
        get: {
            req: GetApiAiBaiduServicePaginateData;
            res: {
                '200': AiBaiduServicePaginateResponse;
            };
        };
    };
    '/api/ai/baidu/service/{id}': {
        get: {
            req: GetApiAiBaiduServiceByIdData;
            res: {
                '200': AiBaiduServiceGetResponse;
            };
        };
        patch: {
            req: PatchApiAiBaiduServiceByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiBaiduServiceByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/baidu/session': {
        post: {
            req: PostApiAiBaiduSessionData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiBaiduSessionGetAllResponse;
            };
        };
    };
    '/api/ai/baidu/session/paginate': {
        get: {
            req: GetApiAiBaiduSessionPaginateData;
            res: {
                '200': AiBaiduSessionPaginateResponse;
            };
        };
    };
    '/api/ai/baidu/session/{id}': {
        get: {
            req: GetApiAiBaiduSessionByIdData;
            res: {
                '200': AiBaiduSessionGetResponse;
            };
        };
        patch: {
            req: PatchApiAiBaiduSessionByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiBaiduSessionByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/ai/common/service-type': {
        post: {
            req: PostApiAiCommonServiceTypeData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            res: {
                '200': AiServiceTypeGetAllResponse;
            };
        };
    };
    '/api/ai/common/service-type/{id}': {
        get: {
            req: GetApiAiCommonServiceTypeByIdData;
            res: {
                '200': AiServiceTypeGetResponse;
            };
        };
        patch: {
            req: PatchApiAiCommonServiceTypeByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiAiCommonServiceTypeByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/area/provinces': {
        get: {
            req: GetApiAreaProvincesData;
            res: {
                '200': AreaResponse;
            };
        };
    };
    '/api/area/cities': {
        get: {
            req: GetApiAreaCitiesData;
            res: {
                '200': AreaResponse;
            };
        };
    };
    '/api/area/regions': {
        get: {
            req: GetApiAreaRegionsData;
            res: {
                '200': AreaResponse;
            };
        };
    };
    '/api/area/treeData': {
        get: {
            res: {
                '200': TreeDataResponse;
            };
        };
    };
    '/api/auth/verify': {
        get: {
            res: {
                '200': AuthVerifyResponse;
            };
        };
    };
    '/api/auth/cancellation': {
        delete: {
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/auth/login': {
        post: {
            req: PostApiAuthLoginData;
            res: {
                '200': AuthLoginSuccessResponse;
            };
        };
    };
    '/api/auth/loginBySmsCode': {
        post: {
            req: PostApiAuthLoginBySmsCodeData;
            res: {
                '200': AuthLoginSuccessResponse;
            };
        };
    };
    '/api/auth/loginByWeixin': {
        post: {
            req: PostApiAuthLoginByWeixinData;
            res: {
                '200': AuthLoginSuccessResponse;
            };
        };
    };
    '/api/auth/loginByWeixinMobile': {
        post: {
            req: PostApiAuthLoginByWeixinMobileData;
            res: {
                '200': AuthLoginSuccessResponse;
            };
        };
    };
    '/api/auth/loginByCode': {
        post: {
            req: PostApiAuthLoginByCodeData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/auth/authenticate': {
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/bi/data/meta': {
        get: {
            res: {
                '200': BiDataMetaGetAllResponse;
            };
        };
        post: {
            req: PostApiBiDataMetaData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/bi/data/meta/{id}': {
        get: {
            req: GetApiBiDataMetaByIdData;
            res: {
                '200': BiDataMetaGetResponse;
            };
        };
        delete: {
            req: DeleteApiBiDataMetaByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiBiDataMetaByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/bi/data/meta/page/all': {
        get: {
            req: GetApiBiDataMetaPageAllData;
            res: {
                '200': BiDataMetaPaginateResponse;
            };
        };
    };
    '/api/bi/data/meta/{metaId}/struct': {
        get: {
            res: {
                '200': BiDataStructGetAllResponse;
            };
        };
        post: {
            req: PostApiBiDataMetaByMetaIdStructData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/bi/data/struct/{id}': {
        get: {
            req: GetApiBiDataStructByIdData;
            res: {
                '200': BiDataStructGetResponse;
            };
        };
        delete: {
            req: DeleteApiBiDataStructByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiBiDataStructByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/bi/data/meta/{metaId}/rule': {
        get: {
            req: GetApiBiDataMetaByMetaIdRuleData;
            res: {
                '200': BiDataRuleGetResponse;
            };
        };
        post: {
            req: PostApiBiDataMetaByMetaIdRuleData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/bi/data/rule/{id}': {
        put: {
            req: PutApiBiDataRuleByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/chat/contacts': {
        post: {
            req: PostApiChatContactsData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': ChatContactsGetResponse;
            };
        };
    };
    '/api/chat/contacts/{id}': {
        delete: {
            req: DeleteApiChatContactsByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiChatContactsByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/chat/message': {
        post: {
            req: PostApiChatMessageData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/chat/message/cursor': {
        get: {
            req: GetApiChatMessageCursorData;
            res: {
                '200': ChatMessageGetResponse;
            };
        };
    };
    '/api/chat/session': {
        post: {
            req: PostApiChatSessionData;
            res: {
                '200': ChatSessionCreateResponse;
            };
        };
        get: {
            res: {
                '200': ChatSessionGetResponse;
            };
        };
    };
    '/api/chat/session/{id}': {
        delete: {
            req: DeleteApiChatSessionByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/weixin-platform/pay-center/notify/commonPay/{appid}/{mchid}': {
        post: {
            res: {
                '201': unknown;
            };
        };
    };
    '/api/weixin-platform/pay-center/notify/nativePay/{appid}/{mchid}': {
        post: {
            res: {
                '201': unknown;
            };
        };
    };
    '/api/weixin-platform/pay-center/notify/refund/{appid}/{mchid}': {
        post: {
            res: {
                '201': unknown;
            };
        };
    };
    '/api/ai-session': {
        post: {
            req: PostApiAiSessionData;
            res: {
                '201': unknown;
            };
        };
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/ai-session/{id}': {
        get: {
            req: GetApiAiSessionByIdData;
            res: {
                '200': unknown;
            };
        };
        patch: {
            req: PatchApiAiSessionByIdData;
            res: {
                '200': unknown;
            };
        };
        delete: {
            req: DeleteApiAiSessionByIdData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/bi-chart-meta': {
        post: {
            req: PostApiBiChartMetaData;
            res: {
                '201': unknown;
            };
        };
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/bi-chart-meta/{id}': {
        get: {
            req: GetApiBiChartMetaByIdData;
            res: {
                '200': unknown;
            };
        };
        patch: {
            req: PatchApiBiChartMetaByIdData;
            res: {
                '200': unknown;
            };
        };
        delete: {
            req: DeleteApiBiChartMetaByIdData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/bi-view-meta': {
        post: {
            req: PostApiBiViewMetaData;
            res: {
                '201': unknown;
            };
        };
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/bi-view-meta/{id}': {
        get: {
            req: GetApiBiViewMetaByIdData;
            res: {
                '200': unknown;
            };
        };
        patch: {
            req: PatchApiBiViewMetaByIdData;
            res: {
                '200': unknown;
            };
        };
        delete: {
            req: DeleteApiBiViewMetaByIdData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/file/upload': {
        post: {
            req: PostApiFileUploadData;
            res: {
                '200': FileUploadResponse;
            };
        };
    };
    '/api/file/uploads': {
        post: {
            req: PostApiFileUploadsData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/file/{id}': {
        get: {
            req: GetApiFileByIdData;
            res: {
                '200': FileGetResponse;
            };
        };
    };
    '/api/file/static/{id}': {
        get: {
            req: GetApiFileStaticByIdData;
            res: {
                /**
                 * 返回指定ID的图片
                 */
                '200': (Blob | File);
            };
        };
    };
    '/api/forum/comment': {
        post: {
            req: PostApiForumCommentData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumCommentData;
            res: {
                '200': ForumCommentGetAllResponse;
            };
        };
    };
    '/api/forum/comment/{id}': {
        delete: {
            req: DeleteApiForumCommentByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumCommentByIdData;
            res: {
                '200': ForumCommentGetResponse;
            };
        };
    };
    '/api/forum/comment/page/all': {
        get: {
            req: GetApiForumCommentPageAllData;
            res: {
                '200': ForumCommentPaginateResponse;
            };
        };
    };
    '/api/forum/comment/page/session': {
        get: {
            req: GetApiForumCommentPageSessionData;
            res: {
                '200': ForumCommentPaginateResponse;
            };
        };
    };
    '/api/forum/comment/count/all': {
        get: {
            req: GetApiForumCommentCountAllData;
            res: {
                '200': ForumCommentGetCountResponse;
            };
        };
    };
    '/api/forum/comment/count/session': {
        get: {
            req: GetApiForumCommentCountSessionData;
            res: {
                '200': ForumCommentGetCountResponse;
            };
        };
    };
    '/api/forum/post': {
        post: {
            req: PostApiForumPostData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumPostData;
            res: {
                '200': ForumPostGetAllResponse;
            };
        };
    };
    '/api/forum/post/{id}': {
        delete: {
            req: DeleteApiForumPostByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiForumPostByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumPostByIdData;
            res: {
                '200': ForumPostGetResponse;
            };
        };
    };
    '/api/forum/post/page/all': {
        get: {
            req: GetApiForumPostPageAllData;
            res: {
                '200': ForumPostPaginateResponse;
            };
        };
    };
    '/api/forum/post/page/session': {
        get: {
            req: GetApiForumPostPageSessionData;
            res: {
                '200': ForumPostPaginateResponse;
            };
        };
    };
    '/api/forum/post/page/cursor/all': {
        get: {
            req: GetApiForumPostPageCursorAllData;
            res: {
                '200': ForumPostPaginateResponse;
            };
        };
    };
    '/api/forum/post/count/all': {
        get: {
            req: GetApiForumPostCountAllData;
            res: {
                '200': ForumPostGetCountResponse;
            };
        };
    };
    '/api/forum/post/count/session': {
        get: {
            req: GetApiForumPostCountSessionData;
            res: {
                '200': ForumPostGetCountResponse;
            };
        };
    };
    '/api/forum/post-relation': {
        post: {
            req: PostApiForumPostRelationData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumPostRelationData;
            res: {
                '200': ForumPostRelationGetAllResponse;
            };
        };
    };
    '/api/forum/post-relation/{id}': {
        delete: {
            req: DeleteApiForumPostRelationByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiForumPostRelationByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/forum/post-relation/session/info': {
        get: {
            req: GetApiForumPostRelationSessionInfoData;
            res: {
                '200': ForumPostRelationGetAllResponse;
            };
        };
    };
    '/api/forum/post-relation/page/all': {
        get: {
            req: GetApiForumPostRelationPageAllData;
            res: {
                '200': ForumPostRelationPaginateResponse;
            };
        };
    };
    '/api/forum/post-relation/page/session': {
        get: {
            req: GetApiForumPostRelationPageSessionData;
            res: {
                '200': ForumPostRelationPaginateResponse;
            };
        };
    };
    '/api/forum/post-relation/count/all': {
        get: {
            req: GetApiForumPostRelationCountAllData;
            res: {
                '200': ForumPostRelationGetCountResponse;
            };
        };
    };
    '/api/forum/post-relation/count/session': {
        get: {
            req: GetApiForumPostRelationCountSessionData;
            res: {
                '200': ForumPostRelationGetCountResponse;
            };
        };
    };
    '/api/forum/section': {
        get: {
            res: {
                '200': ForumSectionGetAllResponse;
            };
        };
        post: {
            req: PostApiForumSectionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/forum/section/{id}': {
        get: {
            req: GetApiForumSectionByIdData;
            res: {
                '200': ForumSectionGetResponse;
            };
        };
        delete: {
            req: DeleteApiForumSectionByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiForumSectionByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/forum/section/page/all': {
        get: {
            req: GetApiForumSectionPageAllData;
            res: {
                '200': ForumSectionPaginateResponse;
            };
        };
    };
    '/api/forum/section/page/session': {
        get: {
            req: GetApiForumSectionPageSessionData;
            res: {
                '200': ForumSectionPaginateResponse;
            };
        };
    };
    '/api/fs': {
        post: {
            req: PostApiFsData;
            res: {
                '200': InsertSuccessResult;
            };
        };
        get: {
            req: GetApiFsData;
            res: {
                '200': FGetAllResponse;
            };
        };
    };
    '/api/fs/children/{id}': {
        get: {
            req: GetApiFsChildrenByIdData;
            res: {
                '200': FGetAllResponse;
            };
        };
    };
    '/api/fs/{id}': {
        get: {
            req: GetApiFsByIdData;
            res: {
                '200': FGetResponse;
            };
        };
        patch: {
            req: PatchApiFsByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
        delete: {
            req: DeleteApiFsByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/initialization/create-super-admin': {
        post: {
            req: PostApiInitializationCreateSuperAdminData;
            res: {
                '200': InsertSuccessResult;
            };
        };
    };
    '/api/mall/cart': {
        post: {
            req: PostApiMallCartData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': MallCartGetAllResponse;
            };
        };
    };
    '/api/mall/cart/{id}': {
        delete: {
            req: DeleteApiMallCartByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiMallCartByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/cart/batch': {
        put: {
            req: PutApiMallCartBatchData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/good': {
        post: {
            req: PostApiMallGoodData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiMallGoodData;
            res: {
                '200': MallGoodGetAllResponse;
            };
        };
    };
    '/api/mall/good/{id}': {
        delete: {
            req: DeleteApiMallGoodByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiMallGoodByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiMallGoodByIdData;
            res: {
                '200': MallGoodGetResponse;
            };
        };
    };
    '/api/mall/good/paginate': {
        get: {
            req: GetApiMallGoodPaginateData;
            res: {
                '200': MallGoodPaginateResponse;
            };
        };
    };
    '/api/mall/good-comment': {
        post: {
            req: PostApiMallGoodCommentData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/good-comment/{id}': {
        delete: {
            req: DeleteApiMallGoodCommentByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/good-comment/pageByCursor': {
        get: {
            req: GetApiMallGoodCommentPageByCursorData;
            res: {
                '200': MallGoodCommentPaginateWidthCursorResponse;
            };
        };
    };
    '/api/mall/good-comment/page': {
        get: {
            req: GetApiMallGoodCommentPageData;
            res: {
                '200': MallGoodCommentPaginateResponse;
            };
        };
    };
    '/api/mall/good-group': {
        post: {
            req: PostApiMallGoodGroupData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': MallGoodGroupGetAllResponse;
            };
        };
    };
    '/api/mall/good-group/{id}': {
        delete: {
            req: DeleteApiMallGoodGroupByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiMallGoodGroupByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiMallGoodGroupByIdData;
            res: {
                '200': MallGoodGroupGetResponse;
            };
        };
    };
    '/api/mall/good-group/tree': {
        get: {
            res: {
                '200': MallGoodGroupGetTreeResponse;
            };
        };
    };
    '/api/mall/good-relation': {
        post: {
            req: PostApiMallGoodRelationData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/good-relation/{id}': {
        delete: {
            req: DeleteApiMallGoodRelationByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/good-relation/item': {
        get: {
            req: GetApiMallGoodRelationItemData;
            res: {
                '200': MallGoodRelationGetResponse;
            };
        };
    };
    '/api/mall/good-tag': {
        post: {
            req: PostApiMallGoodTagData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': MallGoodTabGetAllResponse;
            };
        };
    };
    '/api/mall/good-tag/{id}': {
        delete: {
            req: DeleteApiMallGoodTagByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiMallGoodTagByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiMallGoodTagByIdData;
            res: {
                '200': MallGoodTagGetResponse;
            };
        };
    };
    '/api/mall/good-tag/page': {
        get: {
            req: GetApiMallGoodTagPageData;
            res: {
                '200': MallGoodTagPaginateResponse;
            };
        };
    };
    '/api/mall/order': {
        post: {
            req: PostApiMallOrderData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/mall/order/pageByCursor/session': {
        get: {
            req: GetApiMallOrderPageByCursorSessionData;
            res: {
                '200': MallOrderPageWidthCursorResponse;
            };
        };
    };
    '/api/mall/order/page': {
        get: {
            req: GetApiMallOrderPageData;
            res: {
                '200': MallOrderPaginateResponse;
            };
        };
    };
    '/api/mall/order/{id}': {
        get: {
            req: GetApiMallOrderByIdData;
            res: {
                '200': MallOrderGetResponse;
            };
        };
    };
    '/api/mall/shop': {
        post: {
            req: PostApiMallShopData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': MallShopGetAllResponse;
            };
        };
    };
    '/api/mall/shop/{id}': {
        delete: {
            req: DeleteApiMallShopByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiMallShopByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiMallShopByIdData;
            res: {
                '200': MallShopGetResponse;
            };
        };
    };
    '/api/mall/shop/paginate': {
        get: {
            req: GetApiMallShopPaginateData;
            res: {
                '200': MallShopPaginateResponse;
            };
        };
    };
    '/api/resources': {
        get: {
            res: {
                '200': ResourceGetAllSuccessResult;
            };
        };
        post: {
            req: PostApiResourcesData;
            res: {
                '200': InsertSuccessResult;
            };
        };
    };
    '/api/resources/page': {
        get: {
            req: GetApiResourcesPageData;
            res: {
                '200': ResourcePaginateSuccessResult;
            };
        };
    };
    '/api/resources/{id}': {
        get: {
            req: GetApiResourcesByIdData;
            res: {
                '200': ResourceGetSuccessResult;
            };
        };
        delete: {
            req: DeleteApiResourcesByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
        put: {
            req: PutApiResourcesByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
    };
    '/api/roles': {
        get: {
            res: {
                '200': RoleGetAllSuccessResponse;
            };
        };
        post: {
            req: PostApiRolesData;
            res: {
                '200': InsertSuccessResult;
            };
        };
    };
    '/api/roles/page': {
        get: {
            req: GetApiRolesPageData;
            res: {
                '200': RolesPaginateSuccessResponse;
            };
        };
    };
    '/api/roles/{id}': {
        delete: {
            req: DeleteApiRolesByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
        get: {
            req: GetApiRolesByIdData;
            res: {
                '200': RoleGetSuccessResponse;
            };
        };
        put: {
            req: PutApiRolesByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
    };
    '/api/session/user': {
        get: {
            res: {
                '200': SessionGetUserResponse;
            };
        };
    };
    '/api/session/resources': {
        get: {
            res: {
                '200': unknown;
            };
        };
    };
    '/api/setting/{keys}': {
        get: {
            req: GetApiSettingByKeysData;
            res: {
                '200': SettingGetItemsSuccessResponse;
            };
        };
    };
    '/api/setting': {
        post: {
            req: PostApiSettingData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/sms/test': {
        post: {
            req: PostApiSmsTestData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/sms/{type}/{phone}': {
        post: {
            req: PostApiSmsByTypeByPhoneData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/users': {
        get: {
            res: {
                '200': UserGetAllSuccessResponse;
            };
        };
        post: {
            req: PostApiUsersData;
            res: {
                '200': InsertSuccessResult;
            };
        };
    };
    '/api/users/page': {
        get: {
            req: GetApiUsersPageData;
            res: {
                '200': UsersPaginateSuccessResponse;
            };
        };
    };
    '/api/users/{id}': {
        delete: {
            req: DeleteApiUsersByIdData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
        get: {
            req: GetApiUsersByIdData;
            res: {
                '200': UserGetSuccessResponse;
            };
        };
        put: {
            req: PutApiUsersByIdData;
            res: {
                '200': UpdateSuccessResult;
            };
        };
    };
    '/api/users/session': {
        delete: {
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/users/bindWeixinSession': {
        post: {
            req: PostApiUsersBindWeixinSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/users/bindMobileSession': {
        post: {
            req: PostApiUsersBindMobileSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/users/bindMpMobileSession': {
        post: {
            req: PostApiUsersBindMpMobileSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/users/bindUsernameSession': {
        post: {
            req: PostApiUsersBindUsernameSessionData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/weixin': {
        get: {
            req: GetApiWeixinData;
            res: {
                '200': WeixinGetAllResponse;
            };
        };
        post: {
            req: PostApiWeixinData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/weixin/page': {
        get: {
            req: GetApiWeixinPageData;
            res: {
                '200': WeixinPaginateSuccessResponse;
            };
        };
    };
    '/api/weixin/{id}': {
        delete: {
            req: DeleteApiWeixinByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiWeixinByIdData;
            res: {
                '200': WeixinGetSuccessResponse;
            };
        };
        put: {
            req: PutApiWeixinByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/weixin-platform/mini-program/getPhoneNumber/{appid}': {
        get: {
            req: GetApiWeixinPlatformMiniProgramGetPhoneNumberByAppidData;
            res: {
                '200': GetPhoneNumberResponse;
            };
        };
    };
    '/api/weixin-platform/mini-program/code2Session/{appid}': {
        get: {
            req: GetApiWeixinPlatformMiniProgramCode2SessionByAppidData;
            res: {
                '200': WeixinMiniProgramCodeToSessionResponse;
            };
        };
    };
    '/api/weixin-platform/official-account/getAccessToken/{appid}': {
        get: {
            req: GetApiWeixinPlatformOfficialAccountGetAccessTokenByAppidData;
            res: {
                '200': WeixinOfficialAccountGetAccessTokenResponse;
            };
        };
    };
    '/api/weixin-platform/official-account/getNotifyUrl/{appid}': {
        get: {
            req: GetApiWeixinPlatformOfficialAccountGetNotifyUrlByAppidData;
            res: {
                '200': WeixinOfficialAccountGetNotifyUrlResponse;
            };
        };
    };
    '/api/weixin-platform/official-account/jssdk/get-signature/{appid}': {
        post: {
            req: PostApiWeixinPlatformOfficialAccountJssdkGetSignatureByAppidData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/weixin-platform/official-account/templates/{appid}': {
        get: {
            req: GetApiWeixinPlatformOfficialAccountTemplatesByAppidData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/weixin-platform/official-account/templates/{id}/{appid}': {
        delete: {
            req: DeleteApiWeixinPlatformOfficialAccountTemplatesByIdByAppidData;
            res: {
                '200': DeleteSuccessResult;
            };
        };
    };
    '/api/weixin-platform/official-account/send/{appid}': {
        post: {
            req: PostApiWeixinPlatformOfficialAccountSendByAppidData;
            res: {
                '201': unknown;
            };
        };
    };
    '/api/weixin-platform/pay-center/payParams/{appid}/{mchid}': {
        post: {
            req: PostApiWeixinPlatformPayCenterPayParamsByAppidByMchidData;
            res: {
                '200': WeixinPayCenterGetPayParamsResponse;
            };
        };
    };
    '/api/weixin/official-account-config/weixin/{weixinId}': {
        get: {
            req: GetApiWeixinOfficialAccountConfigWeixinByWeixinIdData;
            res: {
                '200': WeixinOfficialAccountConfigGetByWeixinSuccessResponse;
            };
        };
    };
    '/api/weixin/official-account-config/{id}': {
        put: {
            req: PutApiWeixinOfficialAccountConfigByIdData;
            res: {
                '200': SuccessResult;
            };
        };
    };
    '/api/weixin-platform/official-account/notify/{appid}': {
        post: {
            req: PostApiWeixinPlatformOfficialAccountNotifyByAppidData;
            res: {
                '201': unknown;
            };
        };
        get: {
            req: GetApiWeixinPlatformOfficialAccountNotifyByAppidData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/weixin-platform/official-account-oauth/oauth-jump/info/{appid}': {
        get: {
            req: GetApiWeixinPlatformOfficialAccountOauthOauthJumpInfoByAppidData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/weixin-platform/official-account-oauth/oauth-jump/base/{appid}': {
        get: {
            req: GetApiWeixinPlatformOfficialAccountOauthOauthJumpBaseByAppidData;
            res: {
                '200': unknown;
            };
        };
    };
    '/api/weixin/pay': {
        post: {
            req: PostApiWeixinPayData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            res: {
                '200': WeixinPayGetResponse;
            };
        };
    };
    '/api/weixin/pay/{id}': {
        delete: {
            req: DeleteApiWeixinPayByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        put: {
            req: PutApiWeixinPayByIdData;
            res: {
                '200': SuccessResult;
            };
        };
        get: {
            req: GetApiWeixinPayByIdData;
            res: {
                '200': WeixinPayGetResponse;
            };
        };
    };
    '/api/weixin/pay/page': {
        get: {
            req: GetApiWeixinPayPageData;
            res: {
                '200': WeixinPayPaginateResponse;
            };
        };
    };
    '/api/weixin-platform-user/paginate': {
        get: {
            req: GetApiWeixinPlatformUserPaginateData;
            res: {
                '200': WeixinPlatformUserPaginateResponse;
            };
        };
    };
};